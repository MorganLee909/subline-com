{
  "version": 3,
  "sources": ["js/strands/home.js", "js/strands/ingredients.js", "js/classes/Transaction.js", "js/strands/analytics.js", "js/classes/Recipe.js", "js/strands/recipeBook.js", "js/strands/orders.js", "js/strands/transactions.js", "js/classes/Ingredient.js", "js/classes/Order.js", "js/classes/Merchant.js", "js/strands/account.js", "js/sidebars/ingredientDetails.js", "js/sidebars/newIngredient.js", "js/sidebars/editIngredient.js", "js/sidebars/newOrder.js", "js/sidebars/newRecipe.js", "js/sidebars/editRecipe.js", "js/sidebars/newTransaction.js", "js/sidebars/orderDetails.js", "js/sidebars/orderFilter.js", "js/sidebars/recipeDetails.js", "js/sidebars/transactionDetails.js", "js/sidebars/transactionFilter.js", "js/modal.js", "js/dashboard.js"],
  "sourcesContent": ["let home = {\n    isPopulated: false,\n\n    display: function(){\n        if(!this.isPopulated){\n            this.mostUsedRecipes();\n            this.drawInventoryCheckCard();\n            this.drawPopularCard();\n            this.isPopulated = true;\n        }\n    },\n\n    mostUsedRecipes: function(){\n        let from = new Date();\n        from.setDate(from.getDate() - 30);\n\n        let recipes = merchant.getRecipesSold(from, new Date());\n        recipes.sort((a, b) => (a.quantity > b.quantity) ? -1 : 1);\n        let displayCount = (recipes.length < 10) ? recipes.length : 10;\n        let container = document.getElementById(\"mostUsedRecipeBody\");\n\n        while(container.children.length > 0){\n            container.removeChild(container.firstChild);\n        }\n\n        for(let i = 0; i < displayCount; i++){\n            let item = document.createElement(\"tr\");\n            item.classList.add(\"choosable\");\n            item.onclick = ()=>{\n                controller.openStrand(\"recipeBook\");\n                controller.openSidebar(\"recipeDetails\", recipes[i].recipe);\n            };\n            container.appendChild(item);\n\n            let leftText = document.createElement(\"td\");\n            leftText.innerText = recipes[i].recipe.name;\n            item.appendChild(leftText);\n\n            let centerText = document.createElement(\"td\");\n            centerText.innerText = recipes[i].quantity;\n            item.appendChild(centerText);\n\n            let rightText = document.createElement(\"td\");\n            rightText.innerText = `$${(recipes[i].quantity * recipes[i].recipe.price).toFixed(2)}`;\n            item.appendChild(rightText);\n        }\n    },\n\n    mostUsedIngredients: function(){\n        let ingredients = [];\n        let from = new Date();\n        from.setDate(from.getDate() - 30);\n        from.setHours(0, 0, 0, 0);\n\n        for(let i = 0; i < merchant.inventory.length; i++){\n            let unitCost = merchant.inventory[i].ingredient.getUnitCost();\n            let totalCost = unitCost * merchant.inventory[i].getSoldQuantity(from, new Date());\n            \n            ingredients.push({\n                inventoryItem: merchant.inventory[i],\n                unitCost: merchant.inventory[i].ingredient.getUnitCost(),\n                totalCost: totalCost\n            });\n        }\n\n        ingredients.sort((a, b) => (a.totalCost > b.totalCost) ? -1 : 1);\n        let container = document.getElementById(\"mostUsedBody\");\n\n        while(container.children.length > 0){\n            container.removeChild(container.firstChild);\n        }\n\n        let displayCount = (merchant.inventory.length < 10) ? merchant.inventory.length : 10;\n\n        for(let i = 0; i < displayCount; i++){\n            if(ingredients[i].totalCost === 0) break;\n            let item = document.createElement(\"tr\");\n            item.classList.add(\"choosable\");\n            item.onclick = ()=>{\n                controller.openStrand(\"ingredients\");\n                controller.openSidebar(\"ingredientDetails\", ingredients[i].inventoryItem);\n            }\n            container.appendChild(item);\n\n            let leftText = document.createElement(\"td\");\n            leftText.innerText = ingredients[i].inventoryItem.ingredient.name;\n            item.appendChild(leftText);\n\n            let centerText = document.createElement(\"td\");\n            centerText.innerText = `$${ingredients[i].unitCost.toFixed(2)}/${ingredients[i].inventoryItem.ingredient.unit.toUpperCase()}`;\n            item.appendChild(centerText);\n\n            let rightText = document.createElement(\"td\");\n            rightText.innerText = `$${ingredients[i].totalCost.toFixed(2)}`;\n            item.appendChild(rightText);\n        }\n    },\n\n    drawInventoryCheckCard: function(){\n        let num;\n        if(merchant.inventory.length < 5){\n            num = merchant.inventory.length;\n        }else{\n            num = 5;\n        }\n        let rands = [];\n        for(let i = 0; i < num; i++){\n            let rand = Math.floor(Math.random() * merchant.inventory.length);\n\n            if(rands.includes(rand)){\n                i--;\n            }else{\n                rands[i] = rand;\n            }\n        }\n\n        let ul = document.querySelector(\"#inventoryCheckCard ul\");\n        let template = document.getElementById(\"ingredientCheck\").content.children[0];\n        while(ul.children.length > 0){\n            ul.removeChild(ul.firstChild);\n        }\n        for(let i = 0; i < rands.length; i++){\n            let ingredientCheck = template.cloneNode(true);\n            let input = ingredientCheck.children[1].children[1];\n            const ingredient = merchant.inventory[rands[i]];\n\n            ingredientCheck.ingredient = ingredient;\n            ingredientCheck.children[0].innerText = ingredient.ingredient.name;\n            ingredientCheck.children[1].children[0].onclick = ()=>{\n                input.value--;\n                input.changed = true;\n            };\n\n            input.value = ingredient.quantity.toFixed(2);\n            ingredientCheck.children[2].innerText = ingredient.ingredient.unit.toUpperCase();\n            \n            ingredientCheck.children[1].children[2].onclick = ()=>{\n                input.value++;\n                input.changed = true;\n            }\n            input.onchange = ()=>{input.changed = true};\n            \n\n            ul.appendChild(ingredientCheck);\n        }\n\n        document.getElementById(\"inventoryCheck\").onclick = ()=>{this.submitInventoryCheck()};\n    },\n\n    drawPopularCard: function(){\n        let thisMonth = new Date();\n        thisMonth.setDate(1);\n\n        const ingredientList = merchant.getIngredientsSold(thisMonth);\n        if(ingredientList !== false){\n            ingredientList.sort((a, b)=>{\n                if(a.quantity < b.quantity){\n                    return 1;\n                }\n                if(a.quantity > b.quantity){\n                    return -1;\n                }\n\n                return 0;\n            });\n\n            let quantities = [];\n            let labels = [];\n            let colors = [];\n            let count = (ingredientList.length < 5) ? ingredientList.length - 1 : 4;\n            for(let i = count; i >= 0; i--){\n                const ingredientName = ingredientList[i].ingredient.name;\n                const ingredientQuantity = ingredientList[i].quantity;\n                const unitName = ingredientList[i].ingredient.unit;\n\n                quantities.push(ingredientList[i].quantity);\n                labels.push(`${ingredientName}: ${ingredientQuantity.toFixed(2)} ${unitName.toUpperCase()}`);\n                if(i === 0){\n                    colors.push(\"rgb(255, 99, 107\");\n                }else{\n                    colors.push(\"rgb(179, 191, 209\");\n                }\n            }\n\n            let trace = {\n                x: quantities,\n                type: \"bar\",\n                orientation: \"h\",\n                text: labels,\n                textposition: \"auto\",\n                hoverinfo: \"none\",\n                marker: {\n                    color: colors\n                }\n            }\n\n            let layout = {\n                title: {\n                    text: \"MOST POPULAR INGREDIENTS\"\n                },\n                xaxis: {\n                    zeroline: false,\n                    title: \"QUANTITY\"\n                },\n                yaxis: {\n                    showticklabels: false\n                },\n                paper_bgcolor: \"rgba(0, 0, 0, 0)\"\n            }\n\n            if(screen.width < 1200){\n                layout.margin = {\n                    l: 10,\n                    r: 10,\n                    t: 80,\n                    b: 40\n                };\n            }\n\n            \n            Plotly.newPlot(\"popularIngredientsCard\", [trace], layout);\n        }else{\n            document.getElementById(\"popularCanvas\").style.display = \"none\";\n\n            let notice = document.createElement(\"p\");\n            notice.innerText = \"N/A\";\n            notice.classList = \"notice\";\n            document.getElementById(\"popularIngredientsCard\").appendChild(notice);\n        }\n    },\n\n    //Need to change the updating of ingredients\n    //should update the ingredient directly, then send that.  Maybe...\n    submitInventoryCheck: function(){\n        let lis = document.querySelectorAll(\"#inventoryCheckCard li\");\n\n        let data = [];\n\n        for(let i = 0; i < lis.length; i++){\n            if(lis[i].children[1].children[1].value >= 0){\n                if(lis[i].children[1].children[1].changed === true){\n                    let merchIngredient = lis[i].ingredient;\n                    data.push({\n                        id: merchIngredient.ingredient.id,\n                        quantity: lis[i].children[1].children[1].value\n                    });\n\n                    lis[i].children[1].children[1].changed = false;\n                }\n            }else{\n                controller.createBanner(\"CANNOT HAVE NEGATIVE INGREDIENTS\", \"error\");\n                return;\n            }\n        }\n        \n        if(data.length > 0){\n            let loader = document.getElementById(\"loaderContainer\");\n            loader.style.display = \"flex\";\n\n            fetch(\"/merchant/ingredients/update\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json;charset=utf-8\"\n                },\n                body: JSON.stringify(data)\n            })\n                .then(response => response.json())\n                .then((response)=>{\n                    if(typeof(response) === \"string\"){\n                        controller.createBanner(response, \"error\");\n                    }else{\n                        for(let i = 0; i < response.length; i++){\n                            merchant.removeIngredient(merchant.getIngredient(response[i].ingredient._id));\n                        }\n\n                        merchant.addIngredients(response);\n                        state.updateIngredients();\n                        controller.createBanner(\"INGREDIENTS UPDATED\", \"success\");\n                    }\n                })\n                .catch((err)=>{\n                    controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n                })\n                .finally(()=>{\n                    loader.style.display = \"none\";\n                });\n        }\n    }\n}\n\nmodule.exports = home;", "let ingredients = {\n    isPopulated: false,\n    ingredients: [],\n\n    display: function(){\n        if(!this.isPopulated){\n            document.getElementById(\"ingredientSearch\").oninput = ()=>{this.search()};\n\n            this.populateByProperty();\n\n            this.isPopulated = true;\n        }\n    },\n\n    populateByProperty: function(){\n        let categories;\n        categories = merchant.categorizeIngredients();\n        \n        let ingredientStrand = document.getElementById(\"categoryList\");\n        let categoryTemplate = document.getElementById(\"categoryDiv\").content.children[0];\n        let ingredientTemplate = document.getElementById(\"ingredient\").content.children[0];\n        this.ingredients = [];\n\n        while(ingredientStrand.children.length > 0){\n            ingredientStrand.removeChild(ingredientStrand.firstChild);\n        }\n\n        for(let i = 0; i < categories.length; i++){\n            let categoryDiv = categoryTemplate.cloneNode(true);\n            categoryDiv.children[0].children[0].innerText = categories[i].name.toUpperCase();\n            \n            categoryDiv.children[0].onclick = ()=>{\n                this.toggleCategory(categoryDiv.children[1], categoryDiv.children[0].children[1]);\n            };\n            categoryDiv.children[1].style.display = \"none\";\n            ingredientStrand.appendChild(categoryDiv);\n\n            for(let j = 0; j < categories[i].ingredients.length; j++){\n                let ingredient = categories[i].ingredients[j];\n                let ingredientDiv = ingredientTemplate.cloneNode(true);\n\n                ingredientDiv.children[0].innerText = ingredient.ingredient.name;\n                ingredientDiv.onclick = ()=>{\n                    controller.openSidebar(\"ingredientDetails\", ingredient);\n                    ingredientDiv.classList.add(\"active\");\n                };\n                ingredientDiv._name = ingredient.ingredient.name.toLowerCase();\n                ingredientDiv._unit = ingredient.ingredient.unit.toLowerCase();\n                ingredientDiv.children[2].innerText = `${ingredient.quantity.toFixed(2)} ${ingredient.ingredient.unit.toUpperCase()}`;\n\n                categoryDiv.children[1].appendChild(ingredientDiv);\n                this.ingredients.push(ingredientDiv);\n            }\n        }\n\n    },\n\n    displayIngredientsOnly: function(ingredients){\n        let ingredientDiv = document.getElementById(\"categoryList\");\n\n        while(ingredientDiv.children.length > 0){\n            ingredientDiv.removeChild(ingredientDiv.firstChild);\n        }\n        for(let i = 0; i < ingredients.length; i++){\n            ingredientDiv.appendChild(ingredients[i]);\n        }\n    },\n\n    toggleCategory: function(div, button){\n        if(div.style.display === \"none\"){\n            button.innerHTML = '<svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"18 15 12 9 6 15\"></polyline></svg>';\n            div.style.display = \"flex\";\n        }else if(div.style.display === \"flex\"){\n            button.innerHTML = '<svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>';\n            div.style.display = \"none\";\n        }\n    },\n\n    search: function(){\n        let input = document.getElementById(\"ingredientSearch\").value.toLowerCase();\n\n        if(input === \"\"){\n            this.populateByProperty();\n            return;\n        }\n\n        let matchingIngredients = [];\n        for(let i = 0; i < this.ingredients.length; i++){\n            if(this.ingredients[i]._name.includes(input)){\n                matchingIngredients.push(this.ingredients[i]);\n            }\n        }\n\n        this.displayIngredientsOnly(matchingIngredients);\n    }\n}\n\nmodule.exports = ingredients;", "class TransactionRecipe{\n    constructor(recipe, quantity, merchant){\n        this.recipe = merchant.getRecipe(recipe, true);\n        this.quantity = quantity;\n    }\n}\n\nclass Transaction{\n    constructor(id, date, recipes, parent){\n        this.id = id;\n        this.date = new Date(date);\n        this.recipes = [];\n\n        for(let i = 0; i < recipes.length; i++){\n            this.recipes.push(new TransactionRecipe(\n                recipes[i].recipe,\n                recipes[i].quantity,\n                parent\n            ));\n        }\n    }\n\n    /*\n    Gets the quantity for a given ingredient\n    */\n    getIngredientQuantity(ingredient, isDisplay = false){\n        let total = 0;\n\n        for(let i = 0; i < this.recipes.length; i++){\n            total += this.recipes[i].recipe.getIngredientTotal(ingredient.id) * this.recipes[i].quantity;\n        }\n\n        return total;\n    }\n\n    /*\n    Gets the quantity for a given recipe\n    */\n   getRecipeQuantity(recipe){\n        for(let i = 0; i < this.recipes.length; i++){\n           if(this.recipes[i].recipe === recipe) return this.recipes[i].quantity;\n        }\n        return 0;\n    }\n}\n\nmodule.exports = Transaction;", "const Transaction = require(\"../classes/Transaction.js\");\n\nlet analytics = {\n    isPopulated: false,\n    ingredient: undefined,\n    category: undefined,\n    recipe: undefined,\n    recipeCategory: undefined,\n    transactionsByDate: [],\n\n    display: function(){\n        if(!this.isPopulated){\n            let analIngredientList = document.getElementById(\"analIngredientList\");\n            let analCategoriesList = document.getElementById(\"analCategoriesList\");\n            let analRecipeList = document.getElementById(\"analRecipeList\");\n            let analCatRecipeList = document.getElementById(\"analCatRecipeList\");\n            analIngredientList.onkeyup = ()=>{this.searchItems(analIngredientList.children)};\n            analCategoriesList.onkeyup = ()=>{this.searchItems(analCategoriesList.children)};\n            analRecipeList.onkeyup = ()=>{this.searchItems(analRecipeList.children)};\n            analCatRecipeList.onkeyup = ()=>{this.searchItems(analCatRecipeList.children)};\n\n            let ingredientTab = document.getElementById(\"analIngredientsTab\");\n            let recipeTab = document.getElementById(\"analRecipesTab\");\n            let categoryTab = document.getElementById(\"analCategoriesTab\");\n            let individualTab = document.getElementById(\"analIndividualTab\");\n            ingredientTab.onclick = ()=>{this.tab(ingredientTab)};\n            categoryTab.onclick = ()=>{this.tab(categoryTab)};\n            recipeTab.onclick = ()=>{this.tab(recipeTab)};\n            individualTab.onclick = ()=>{this.tab(individualTab)};\n\n            let to = new Date();\n            let from = new Date(to.getFullYear(), to.getMonth() - 1, to.getDate());\n\n            document.getElementById(\"analStartDate\").valueAsDate = from;\n            document.getElementById(\"analEndDate\").valueAsDate = to;\n            document.getElementById(\"analDateBtn\").onclick = ()=>{this.newDates()};\n\n            this.populateButtons();\n\n            if(merchant.inventory.length > 0) this.ingredient = merchant.inventory[0].ingredient;\n            if(merchant.recipes.length > 0) this.recipe = merchant.recipes[0];\n            \n            this.newDates();\n            this.isPopulated = true;\n        }\n    },\n\n    populateButtons: function(){\n        let ingredientButtons = document.getElementById(\"analIngredientList\");\n        let categoryButtons = document.getElementById(\"analCategoriesList\");\n        let recipeButtons = document.getElementById(\"analRecipeList\");\n        let recipeCategoryButtons = document.getElementById(\"analCatRecipeList\");\n\n        while(ingredientButtons.children.length > 1){\n            ingredientButtons.removeChild(ingredientButtons.lastChild);\n        }\n\n        for(let i = 0; i < merchant.inventory.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = merchant.inventory[i].ingredient.name;\n            button.classList.add(\"choosable\");\n            button.onclick = ()=>{\n                this.ingredient = merchant.inventory[i].ingredient;\n                this.displayIngredient();\n            };\n            ingredientButtons.appendChild(button);\n        }\n\n        while(categoryButtons.children.length > 1){\n            categoryButtons.removeChild(categoryButtons.firstChild);\n        }\n\n        let categories = merchant.categorizeIngredients();\n        for(let i = 0; i < categories.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = categories[i].name;\n            button.classList.add(\"choosable\");\n            button.onclick = ()=>{\n                this.category = categories[i];\n                this.displayIngredientCategory();\n            }\n            categoryButtons.appendChild(button);\n        }\n\n        while(recipeButtons.children.length > 1){\n            recipeButtons.removeChild(recipeButtons.firstChild);\n        }\n\n        for(let i = 0; i < merchant.recipes.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = merchant.recipes[i].name;\n            button.classList.add(\"choosable\");\n            button.onclick = ()=>{\n                this.recipe = merchant.recipes[i];\n                this.displayRecipe();\n            };\n            recipeButtons.appendChild(button);\n        }\n\n        while(recipeCategoryButtons.children.length > 1){\n            recipeCategoryButtons.removeChild(recipeCategoryButtons.firstChild);\n        }\n\n        let recipeCategories = merchant.categorizeRecipes();\n        for(let i = 0; i < recipeCategories.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = (recipeCategories[i].name === \"\") ? \"UNCATEGORIZED\" : recipeCategories[i].name;\n            \n            button.classList.add(\"choosable\");\n            button.onclick = ()=>{\n                this.recipeCategory = recipeCategories[i];\n                this.displayRecipeCategory();\n            }\n            recipeCategoryButtons.appendChild(button);\n        }\n    },\n\n    getData: function(from, to){\n        let data = {\n            from: from,\n            to: to,\n            recipes: []\n        }\n        \n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        return fetch(\"/transaction\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    this.transactionsByDate = [];\n                    response.reverse();\n\n                    let startOfDay = new Date(from.getTime());\n                    startOfDay.setHours(0, 0, 0, 0);\n                    let endOfDay = new Date(from.getTime());\n                    endOfDay.setDate(endOfDay.getDate() + 1);\n                    endOfDay.setHours(0, 0, 0, 0);\n                    \n                    let transactionIndex = 0;\n                    while(startOfDay <= to){\n                        let currentTransactions = [];\n\n                        while(transactionIndex < response.length && new Date(response[transactionIndex].date) < endOfDay){\n                            currentTransactions.push(new Transaction(\n                                response[transactionIndex]._id,\n                                response[transactionIndex].date,\n                                response[transactionIndex].recipes,\n                                merchant\n                            ));\n\n                            transactionIndex++;\n                        }\n\n                        let thing = {\n                            date: new Date(startOfDay.getTime()),\n                            transactions: currentTransactions\n                        };\n                        this.transactionsByDate.push(thing);\n\n                        startOfDay.setDate(startOfDay.getDate() + 1);\n                        endOfDay.setDate(endOfDay.getDate() + 1);\n                    }\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"UNABLE TO UPDATE THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    displayIngredient: function(){\n        if(this.ingredient === undefined || this.transactionsByDate.length === 0) return;\n\n        //break down data into dates and quantities\n        let dates = [];\n        let quantities = [];\n\n        for(let i = 0; i < this.transactionsByDate.length; i++){\n            dates.push(this.transactionsByDate[i].date);\n\n            let sum = 0;\n            for(let j = 0; j < this.transactionsByDate[i].transactions.length; j++){\n                let transaction = this.transactionsByDate[i].transactions[j];\n                sum += transaction.getIngredientQuantity(this.ingredient, true);\n            }\n            \n            quantities.push(sum);\n        }\n\n        //create and display the graph\n        let trace = {\n            x: dates,\n            y: quantities,\n            mode: \"lines+markers\",\n            line: {\n                color: \"rgb(255, 99, 107)\"\n            }\n        }\n\n        let unit = (this.ingredient.unit === \"bottle\") ? this.ingredient.altUnit : this.ingredient.unit;\n\n        let yaxis = `QUANTITY (${unit.toUpperCase()})`;\n\n        let layout = {\n            title: this.ingredient.name.toUpperCase(),\n            xaxis: {title: \"DATE\"},\n            yaxis: {title: yaxis},\n            margin: {\n                l: 40,\n                r: 10,\n                b: 20,\n                t: 30\n            },\n            paper_bgcolor: \"rgba(0, 0, 0, 0)\"\n        }\n\n        Plotly.newPlot(\"itemUseGraph\", [trace], layout);\n\n        //Create min/max/avg\n        //Current ingredient is stored on the \"analMinUse\" element\n        let min = quantities[0];\n        let max = quantities[0];\n        let sum = 0;\n        for(let i = 0; i < quantities.length; i++){\n            if(quantities[i] < min) min = quantities[i];\n            if(quantities[i] > max) max = quantities[i];\n\n            sum += quantities[i];\n        }\n\n        document.getElementById(\"analMinUse\").innerText = `${min.toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analAvgUse\").innerText = `${(sum / quantities.length).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analMaxUse\").innerText = `${max.toFixed(2)} ${unit.toUpperCase()}`;\n\n        //Create weekday averages\n        let dayUse = [0, 0, 0, 0, 0, 0, 0];\n        let dayCount = [0, 0, 0, 0, 0, 0, 0];\n        for(let i = 0; i < quantities.length; i++){\n            dayUse[dates[i].getDay()] += quantities[i];\n            dayCount[dates[i].getDay()]++;\n        }\n\n        document.getElementById(\"analDayOne\").innerText = `${(dayUse[0] / dayCount[0]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDayTwo\").innerText = `${(dayUse[1] / dayCount[1]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDayThree\").innerText = `${(dayUse[2] / dayCount[2]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDayFour\").innerText = `${(dayUse[3] / dayCount[3]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDayFive\").innerText = `${(dayUse[4] / dayCount[4]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDaySix\").innerText = `${(dayUse[5] / dayCount[5]).toFixed(2)} ${unit.toUpperCase()}`;\n        document.getElementById(\"analDaySeven\").innerText = `${(dayUse[6] / dayCount[6]).toFixed(2)} ${unit.toUpperCase()}`;\n    },\n\n    displayIngredientCategory: function(){\n        if(this.category === undefined) this.category = merchant.categorizeIngredients()[0];\n        if(this.category === undefined) return;\n\n        let dates = [];\n        let quantities = [];\n\n        for(let i = 0; i < this.transactionsByDate.length; i++){\n            dates.push(this.transactionsByDate[i].date);\n            let total = 0;\n            for(let j = 0; j < this.transactionsByDate[i].transactions.length; j++){\n                let transaction = this.transactionsByDate[i].transactions[j];\n\n                for(let k = 0; k < this.category.ingredients.length; k++){\n                    total += transaction.getIngredientQuantity(this.category.ingredients[k].ingredient, true);\n                }\n            }\n            quantities.push(total);\n        }\n\n        let trace = {\n            x: dates,\n            y: quantities,\n            mode: \"lines+markers\",\n            line: {\n                color: \"rgb(255, 99, 107)\"\n            }\n        };\n\n        let layout = {\n            title: this.category.name,\n            xaxis: {title: \"DATE\"},\n            yaxis: {title: \"COST ($)\"},\n            margin: {\n                l: 40,\n                r: 10,\n                b: 20,\n                t: 30\n            },\n            paper_bgcolor: \"white\"\n        }\n\n        Plotly.newPlot(\"analCategoriesGraph\", [trace], layout);\n    },\n\n    displayRecipe: function(){\n        if(this.recipe === undefined || this.transactionsByDate.length === 0) return;\n\n        //break down data into dates and quantities\n        let dates = [];\n        let quantities = [];\n\n        for(let i = 0; i < this.transactionsByDate.length; i++){\n            dates.push(this.transactionsByDate[i].date);\n            let sum = 0;\n\n            for(let j = 0; j < this.transactionsByDate[i].transactions.length; j++){\n                const transaction = this.transactionsByDate[i].transactions[j];\n\n                for(let k = 0; k < transaction.recipes.length; k++){\n                    if(transaction.recipes[k].recipe === this.recipe){\n                        sum += transaction.recipes[k].quantity;\n                    }\n                }\n            }\n\n            quantities.push(sum);\n        }\n        \n        //create and display the graph\n        const trace = {\n            x: dates,\n            y: quantities,\n            mode: \"lines+markers\",\n            line: {\n                color: \"rgb(255, 99, 107)\"\n            }\n        }\n\n        const layout = {\n            title: this.recipe.name.toUpperCase(),\n            xaxis: {title: \"DATE\"},\n            yaxis: {title: \"QUANTITY\"},\n            margin: {\n                l: 40,\n                r: 10,\n                b: 20,\n                t: 30\n            },\n            paper_bgcolor: \"rgba(0, 0, 0, 0)\"\n        }\n\n        Plotly.newPlot(\"recipeSalesGraph\", [trace], layout);\n\n        //Display the boxes at the bottom\n        //Current recipe is stored on the \"recipeAvgUse\" element\n        let avg = 0;\n        for(let i = 0; i < quantities.length; i++){\n            avg += quantities[i];\n        }\n        avg = avg / quantities.length;\n\n        document.getElementById(\"recipeAvgUse\").innerText = avg.toFixed(2);\n        document.getElementById(\"recipeAvgRevenue\").innerText = `$${(avg * this.recipe.price).toFixed(2)}`;\n    },\n\n    displayRecipeCategory: function(){\n        if(this.recipeCategory === undefined) this.recipeCategory = merchant.categorizeRecipes()[0];\n\n        let dates = [];\n        let quantities = [];\n\n        for(let i = 0; i < this.transactionsByDate.length; i++){\n            dates.push(this.transactionsByDate[i].date);\n            let total = 0;\n            for(let j = 0; j < this.transactionsByDate[i].transactions.length; j++){\n                for(let k = 0; k < this.recipeCategory.recipes.length; k++){\n                    total += this.transactionsByDate[i].transactions[j].getRecipeQuantity(this.recipeCategory.recipes[k]);\n                }\n            }\n\n            quantities.push(total);\n        }\n\n        let trace = {\n            x: dates,\n            y: quantities,\n            mode: \"lines+markers\",\n            line: {\n                color: \"rgb(255, 99, 107)\"\n            }\n        };\n\n        let layout = {\n            title: (this.recipeCategory.name === \"\") ? \"UNCATEGORIZED\" : this.recipeCategory.name,\n            xaxis: {title: \"DATE\"},\n            yaxis: {title: \"COST ($)\"},\n            margin: {\n                l: 40,\n                r: 10,\n                b: 20,\n                t: 30\n            },\n            paper_bgcolor: \"white\"\n        };\n\n        Plotly.newPlot(\"analCatRecipeGraph\", [trace], layout);\n    },\n\n    newDates: async function(){\n        const from = document.getElementById(\"analStartDate\").valueAsDate;\n        const to = document.getElementById(\"analEndDate\").valueAsDate;\n        from.setHours(0, 0, 0, 0);\n        to.setDate(to.getDate() + 1);\n        to.setHours(0, 0, 0, 0);\n\n        await this.getData(from, to);\n\n        let analTabs = document.getElementById(\"analTabs\");\n        if(analTabs.children[0].children[0].classList.contains(\"active\")){\n            if(analTabs.children[1].children[0].classList.contains(\"active\")){\n                this.displayIngredient();\n            }else{this.displayIngredientCategory()};\n        }else{\n            if(analTabs.children[1].children[0].classList.contains(\"active\")){\n                this.displayRecipe();\n            }else{this.displayRecipeCategory()};\n        }\n    },\n\n    tab: function(tab){\n        let upperGroup = document.getElementById(\"topAnalTabs\");\n        let lowerGroup = document.getElementById(\"bottomAnalTabs\");\n        let strand = document.getElementById(\"analyticsStrand\");\n\n        for(let i = 0; i < tab.parentElement.children.length; i++){\n            tab.parentElement.children[i].classList.remove(\"active\");\n        }\n\n        tab.classList.add(\"active\");\n\n        for(let i = 1; i < strand.children.length; i++){\n            strand.children[i].style.display = \"none\";\n        }\n\n        if(upperGroup.children[0].classList.contains(\"active\")){\n            if(lowerGroup.children[0].classList.contains(\"active\")){\n                document.getElementById(\"analIndividualIngredient\").style.display = \"flex\";\n                this.displayIngredient();\n            }else{\n                document.getElementById(\"analCategoryIngredient\").style.display = \"flex\";\n                this.displayIngredientCategory();\n            }\n        }else{\n            if(lowerGroup.children[0].classList.contains(\"active\")){\n                document.getElementById(\"analIndividualRecipe\").style.display = \"flex\";\n                this.displayRecipe();\n            }else{\n                document.getElementById(\"analCategoryRecipe\").style.display = \"flex\";\n                this.displayRecipeCategory();\n            }\n        }\n    },\n\n    searchItems: function(list){\n        let searchString = list[0].value;\n        if(searchString === \"\"){\n            for(let i = 1; i < list.length; i++){\n                list[i].style.display = \"block\";\n            }\n        }else{\n            for(let i = 1; i < list.length; i++){\n                if(!list[i].innerText.toLowerCase().includes(searchString)){\n                    list[i].style.display = \"none\";\n                }else{\n                    list[i].style.display = \"flex\";\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = analytics;", "const recipeBook = require(\"../strands/recipeBook.js\");\nconst analytics = require(\"../strands/analytics.js\");\n\nclass RecipeIngredient{\n    constructor(ingredient, quantity, unit){\n        this.ingredient = ingredient;\n        this._quantity = quantity;\n        this.unit = unit;\n    }\n\n    get quantity(){\n        return this._quantity * controller.unitMultiplier(controller.getBaseUnit(this.unit), this.unit);\n    }\n\n    set quantity(quantity){\n        this._quantity = quantity;\n    }\n\n    getQuantityDisplay(){\n        return `${this.quantity.toFixed(2)} ${this.unit.toUpperCase()}`;\n    }\n}\n\n/*\nRecipe Object\nid = database id of recipe\nname = name of recipe\nprice = price of recipe in cents\ningredients = [{\n    ingredient: Ingredient Object,\n    quantity: quantity of the ingredient within the recipe (stored as base unit, i.e grams)\n    unit: String\n    baseUnitmultiplier: Number\n}]\nparent = merchant that it belongs to\n*/\nclass Recipe{\n    constructor(id, name, category, price, ingredients, parent, hidden){\n        this.id = id;\n        this.name = name;\n        this.category = category;\n        this._price = price;\n        this.parent = parent;\n        this.hidden = hidden;\n        this.ingredients = [];\n        //Ingredient totals is the total amount of each ingredient within the recipe, converted to ingredient base unit\n        this.ingredientTotals = {};\n\n        for(let i = 0; i < ingredients.length; i++){\n            let ingredient = parent.getIngredient(ingredients[i].ingredient);\n            let recipeIngredient = new RecipeIngredient(\n                ingredient.ingredient,\n                ingredients[i].quantity,\n                ingredients[i].unit,\n            );\n\n            this.ingredients.push(recipeIngredient);\n        }\n    }\n\n    get price(){\n        return this._price / 100;\n    }\n\n    set price(price){\n        this._price = price;\n    }\n\n    clearIngredients(){\n        this.ingredients = [];\n    }\n\n    //Returns the quantity of a single ingredient with the recipe.\n    //Returns the quantity converted to the base unit of the ingredient\n    getIngredientTotal(id){\n        for(let i = 0; i < this.ingredients.length; i++){\n            if(this.ingredients[i].ingredient.id === id){\n                return (this.ingredientTotals[id] === undefined) ? 0 : this.ingredientTotals[id] * controller.unitMultiplier(controller.toBase(this.ingredients[i].ingredient.unit), this.ingredients[i].ingredient.unit);\n            }\n        }\n\n        return 0;\n    }\n\n    addIngredient(ingredient, quantity, unit, baseUnitMultiplier){\n        let recipeIngredient = new RecipeIngredient(ingredient, quantity, unit, baseUnitMultiplier);\n        this.ingredients.push(recipeIngredient);\n\n        recipeBook.isPopulated = false;\n        analytics.isPopulated = false;\n    }\n\n    calculateIngredientTotals(){\n        this.ingredientTotals = {};\n\n        let traverseIngredient = (ingredient, multiplier)=>{\n            for(let i = 0; i < ingredient.subIngredients.length; i++){\n                traverseIngredient(ingredient.subIngredients[i].ingredient, multiplier * ingredient.subIngredients[i]._quantity);\n            }\n\n            if(this.ingredientTotals[ingredient.id] === undefined){\n                this.ingredientTotals[ingredient.id] = multiplier;\n            }else{\n                this.ingredientTotals[ingredient.id] += multiplier;\n            }\n        }\n\n        for(let i = 0; i < this.ingredients.length; i++){\n            traverseIngredient(this.ingredients[i].ingredient, this.ingredients[i]._quantity);\n        }\n    }\n}\n\nmodule.exports = Recipe;", "const Recipe = require(\"../classes/Recipe.js\");\n\nlet recipeBook = {\n    isPopulated: false,\n    recipeDivList: [],\n\n    display: function(){\n        if(!this.isPopulated){\n            this.populateRecipes();\n\n            let button = document.getElementById(\"recipeUpdate\");\n            switch(merchant.pos){\n                case \"square\":\n                    button.innerText = \"UPDATE\";\n                    button.onclick = ()=>{this.posUpdate()};\n                    break;\n                case \"none\":\n                    button.innerText = \"NEW\";\n                    button.onclick = ()=>{controller.openSidebar(\"addRecipe\")};\n                    break;\n            }\n\n            document.getElementById(\"hiddenRecipesCheckbox\").onclick = ()=>{this.populateRecipes()};\n                            \n            document.getElementById(\"recipeSearch\").oninput = ()=>{this.search()};\n\n            this.populateRecipes();\n\n            this.isPopulated = true;\n        }\n    },\n\n    populateRecipes: function(){\n        let recipeList = document.getElementById(\"recipeList\");\n        let template = document.getElementById(\"recipe\").content.children[0];\n        let hiddenCheck = document.getElementById(\"hiddenRecipesCheckbox\");\n\n        this.recipeDivList = [];\n        while(recipeList.children.length > 0){\n            recipeList.removeChild(recipeList.firstChild);\n        }\n\n        for(let i = 0; i < merchant.recipes.length; i++){\n            if(merchant.recipes[i].hidden === true && hiddenCheck.checked === false) continue;\n            let recipeDiv = template.cloneNode(true);\n            recipeDiv.onclick = ()=>{\n                controller.openSidebar(\"recipeDetails\", merchant.recipes[i]);\n                recipeDiv.classList.add(\"active\");\n            }\n            recipeDiv._name = merchant.recipes[i].name;\n            recipeList.appendChild(recipeDiv);\n\n            recipeDiv.children[0].innerText = merchant.recipes[i].name;\n            recipeDiv.children[1].innerText = `$${merchant.recipes[i].price.toFixed(2)}`;\n\n            this.recipeDivList.push(recipeDiv);\n        }\n    },\n\n    search: function(){\n        let input = document.getElementById(\"recipeSearch\").value.toLowerCase();\n        let recipeList = document.getElementById(\"recipeList\");\n\n        let matchingRecipes = [];\n        for(let i = 0; i < this.recipeDivList.length; i++){\n            if(this.recipeDivList[i]._name.toLowerCase().includes(input)){\n                matchingRecipes.push(this.recipeDivList[i]);\n            }\n        }\n\n        while(recipeList.children.length > 0){\n            recipeList.removeChild(recipeList.firstChild);\n        }\n        for(let i = 0; i < matchingRecipes.length; i++){\n            recipeList.appendChild(matchingRecipes[i]);\n        }\n    },\n\n    posUpdate: function(){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n        let url = `/recipes/update/${merchant.pos}`;\n\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.addRecipes(response.new);\n\n                    for(let i = 0; i < response.removed.length; i++){\n                        for(let j = 0; j < merchant.recipes.length; j++){\n                            if(merchant.recipes[j].id === response.removed[i]._id){\n                                merchant.removeRecipe(merchant.recipes[j]);\n                                break;\n                            }\n                        }\n                    }\n\n                    state.updateRecipes();\n                    controller.createBanner(\"RECIPES SUCCESSFULLY UPDATED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = recipeBook;", "let orders = {\n    orders: [],\n    isPopulated: false,\n\n    display: function(){\n        if(this.isPopulated === false){\n            document.getElementById(\"orderFilterBtn\").onclick = ()=>{controller.openSidebar(\"orderFilter\")};\n            document.getElementById(\"newOrderBtn\").onclick = ()=>{controller.openSidebar(\"newOrder\")};\n\n            this.displayOrders();\n        }\n    },\n\n    displayOrders: function(){\n        let orderList = document.getElementById(\"orderList\");\n        let template = document.getElementById(\"order\").content.children[0];\n\n        while(orderList.children.length > 0){\n            orderList.removeChild(orderList.firstChild);\n        }\n\n        for(let i = 0; i < this.orders.length; i++){\n            \n            let orderDiv = template.cloneNode(true);\n            orderDiv.order = this.orders[i];\n            orderDiv.children[0].innerText = this.orders[i].name;\n            orderDiv.children[1].innerText = `${this.orders[i].ingredients.length} ingredients`;\n            orderDiv.children[2].innerText = this.orders[i].date.toLocaleDateString(\"en-US\");\n            orderDiv.children[3].innerText = `$${this.orders[i].getTotalCost().toFixed(2)}`;\n            orderDiv.onclick = ()=>{\n                controller.openSidebar(\"orderDetails\", this.orders[i]);\n                orderDiv.classList.add(\"active\");\n            }\n            orderList.appendChild(orderDiv);\n        }\n    }\n}\n\nmodule.exports = orders;", "let transactions = {\n    transactions: [],\n\n    display: function(){\n        document.getElementById(\"filterTransactionsButton\").onclick = ()=>{controller.openSidebar(\"transactionFilter\")};\n        document.getElementById(\"newTransactionButton\").onclick = ()=>{controller.openSidebar(\"newTransaction\")};\n        if(this.transactions.length === 0){\n            let from = new Date();\n            from.setDate(from.getDate() - 30);\n            from.setHours(0, 0, 0, 0);\n\n            this.transactions = merchant.getTransactions(from, new Date());\n        }\n\n        this.populateTransactions();\n\n        this.isPopulated = true;\n    },\n\n    populateTransactions: function(){\n        let transactionsList = document.getElementById(\"transactionsList\");\n        let template = document.getElementById(\"transaction\").content.children[0];\n\n        while(transactionsList.children.length > 0){\n            transactionsList.removeChild(transactionsList.firstChild);\n        }\n\n        let i = 0;\n        while(i < this.transactions.length && i < 100){\n            let transactionDiv = template.cloneNode(true);\n            let transaction = this.transactions[i];\n\n            transactionDiv.onclick = ()=>{\n                controller.openSidebar(\"transactionDetails\", transaction);\n                transactionDiv.classList.add(\"active\");\n            }\n            transactionsList.appendChild(transactionDiv);\n\n            let totalRecipes = 0;\n            let totalPrice = 0;\n\n            for(let j = 0; j < transaction.recipes.length; j++){\n                totalRecipes += transaction.recipes[j].quantity;\n                totalPrice += transaction.recipes[j].recipe.price * transaction.recipes[j].quantity;\n            }\n\n            transactionDiv.children[0].innerText = transaction.date.toLocaleDateString();\n            transactionDiv.children[1].innerText = `${totalRecipes} recipes sold`;\n            transactionDiv.children[2].innerText = `$${totalPrice.toFixed(2)}`;\n\n            i++;\n        }\n    }\n}\n\nmodule.exports = transactions;", "class SubIngredient{\n    constructor(id, ingredient, quantity, unit, parent){\n        this.id = id;\n        this._ingredient = ingredient;\n        this._quantity = quantity;\n        this.unit = unit;\n        this.parent = parent;\n    }\n\n    get ingredient(){\n        return merchant.getIngredient(this._ingredient).ingredient;\n    }\n\n    get quantity(){\n        let subQuantity = this._quantity * controller.unitMultiplier(controller.getBaseUnit(this.unit), this.unit);\n        let parentMultiplier = controller.unitMultiplier(controller.getBaseUnit(this._ingredient.unit), this._ingredient.unit);\n\n        return subQuantity / parentMultiplier;\n    }\n\n    getDisplayQuantity(){\n        return `${parseFloat(this.quantity.toFixed(2))} ${this.unit} / ${this.parent.unit}`;\n    }\n}\n\nclass Ingredient{\n    constructor(id, name, category, unit, altUnit, subIngredients, convert, parent){\n        this.id = id;\n        this.name = name;\n        this.category = category;\n        this.unit = unit;\n        this.altUnit = altUnit;\n        this.subIngredients = [];\n        this.parent = parent;\n        this.convert = convert;\n\n        for(let i = 0; i < subIngredients.length; i++){\n            this.subIngredients.push(new SubIngredient(\n                subIngredients[i].id,\n                subIngredients[i].ingredient,\n                subIngredients[i].quantity,\n                subIngredients[i].unit,\n                this\n            ));\n        }\n    }\n\n    addIngredients(ingredients){\n        for(let i = 0; i < ingredients.length; i++){\n            this.subIngredients.push(new SubIngredient(\n                ingredients[i].id,\n                ingredients[i].ingredient,\n                ingredients[i].quantity,\n                ingredients[i].unit,\n                this\n            ));\n        }\n    }\n\n    replaceIngredients(ingredients){\n        this.subIngredients = [];\n\n        this.addIngredients(ingredients);\n    }\n\n    getUnitCost(){\n        let totalCost = 0;\n        let quantity = 0;\n\n        for(let i = 0; i < this.parent.orders.length; i++){\n            for(let j = 0; j < this.parent.orders[i].ingredients.length; j++){\n                let ingredient = this.parent.orders[i].ingredients[j];\n\n                if(ingredient.ingredient === this){\n                    totalCost += ingredient.pricePerUnit * ingredient.quantity;\n                    quantity += ingredient.quantity;\n                    break;\n                }\n            }\n        }\n\n        return (quantity === 0) ? 0 : totalCost / quantity;\n    }\n\n    getPotentialUnits(){\n        switch(controller.getUnitType(this.unit)){\n            case \"mass\": return [\"g\", \"kg\", \"oz\", \"lb\"];\n            case \"volume\": return [\"ml\", \"l\", \"tsp\", \"tbsp\", \"ozfl\", \"cup\", \"pt\", \"qt\", \"gal\"];\n            case \"length\": return [\"mm\", \"cm\", \"m\", \"in\", \"ft\"];\n            case \"bottle\": return [\"ml\", \"l\", \"tsp\", \"tbsp\", \"ozfl\", \"cup\", \"pt\", \"qt\", \"gal\"];\n            case \"each\": return [\"each\"];\n        }\n    }\n}\n\nmodule.exports = Ingredient;", "class OrderIngredient{\n    constructor(ingredient, quantity, pricePerUnit){\n        this.ingredient = merchant.getIngredient(ingredient).ingredient;\n        this._quantity = quantity;\n        this._pricePerUnit = pricePerUnit;\n    }\n\n    get quantity(){\n        switch(this.ingredient.unit){\n            case \"kg\": return this._quantity / 1000;\n            case \"oz\": return this._quantity / 28.3495;\n            case \"lb\": return this._quantity / 453.5924;\n            case \"ml\": return this._quantity * 1000;\n            case \"tsp\": return this._quantity * 202.8842;\n            case \"tbsp\": return this._quantity * 67.6278;\n            case \"ozfl\": return this._quantity * 33.8141;\n            case \"cup\": return this._quantity * 4.1667;\n            case \"pt\": return this._quantity * 2.1134;\n            case \"qt\": return this._quantity * 1.0567;\n            case \"gal\": return this._quantity / 3.7854;\n            case \"mm\": return this._quantity * 1000;\n            case \"cm\": return this._quantity * 100;\n            case \"in\": return this._quantity * 39.3701;\n            case \"ft\": return this._quantity * 3.2808;\n            case \"bottle\": return this._quantity * this.ingredient.convert.toBottle;\n            default: return this._quantity;\n        }\n    }\n\n    updateQuantity(quantity){\n        quantity *= controller.unitMultiplier(unit, controller.getBaseUnit(unit))\n        switch(controller.getUnitType(this.ingredient.unit)){\n            case \"mass\": quantity /= this.ingredient.convert.toMass; break;\n            case \"volume\": quantity /= this.ingredient.convert.toVolume; break;\n            case \"length\": quantity /= this.ingredient.convert.toLength; break;\n        }\n        this._quantity += quantity;\n    }\n\n    get pricePerUnit(){\n        switch(this.ingredient.unit){\n            case \"g\": return this._pricePerUnit / 100;\n            case \"kg\": return (this._pricePerUnit * 1000) / 100; \n            case \"oz\": return (this._pricePerUnit * 28.3495) / 100; \n            case \"lb\": return (this._pricePerUnit * 453.5924) / 100; \n            case \"ml\": return (this._pricePerUnit / 1000) / 100; \n            case \"l\": return this._pricePerUnit / 100;\n            case \"tsp\": return (this._pricePerUnit / 202.8842) / 100; \n            case \"tbsp\": return (this._pricePerUnit / 67.6278) / 100; \n            case \"ozfl\": return (this._pricePerUnit / 33.8141) / 100; \n            case \"cup\": return (this._pricePerUnit / 4.1667) / 100; \n            case \"pt\": return (this._pricePerUnit / 2.1134) / 100; \n            case \"qt\": return (this._pricePerUnit / 1.0567) / 100; \n            case \"gal\": return (this._pricePerUnit * 3.7854) / 100; \n            case \"mm\": return (this._pricePerUnit / 1000) / 100; \n            case \"cm\": return (this._pricePerUnit / 100) / 100; \n            case \"m\": return this._pricePerUnit / 100;\n            case \"in\": return (this._pricePerUnit / 39.3701) / 100; \n            case \"ft\": return (this._pricePerUnit / 3.2808) / 100;\n            case \"bottle\": return (this._pricePerUnit / this.ingredient.convert.toBottle) / 100;\n            default: return this._pricePerUnit / 100;\n        }\n    }\n\n    cost(){\n        return (this._quantity * this._pricePerUnit) / 100;\n    }\n        \n}\n\n/*\nOrder Object\nid = id of order in the database\nname = name/id of order, if any\ndate = Date Object for when the order was created\ntaxes = User entered taxes associated with the order\nfees = User entered fees associated with the order\ningredients = [{\n    ingredient: Ingredient ID,\n    quantity: quantity of ingredient sold,\n    pricePerUnit: price of purchase (per base unit)\n}]\nparent = the merchant that it belongs to\n*/\nclass Order{\n    constructor(id, name, date, taxes, fees, ingredients, parent){\n        this.id = id;\n        this.name = name;\n        this.date = new Date(date);\n        this._taxes = taxes;\n        this._fees = fees;\n        this.ingredients = [];\n        this.parent = parent;\n\n        for(let i = 0; i < ingredients.length; i++){\n            this.ingredients.push(new OrderIngredient(\n                ingredients[i].ingredient,\n                ingredients[i].quantity,\n                ingredients[i].pricePerUnit\n            ));\n        }\n    }\n\n    get taxes(){\n        return this._taxes / 100;\n    }\n\n    get fees(){\n        return this._fees / 100;\n    }\n\n    getIngredientCost(){\n        let sum = 0;\n        for(let i = 0; i < this.ingredients.length; i++){\n            sum += this.ingredients[i].cost();\n        }\n        return sum;\n    }\n\n    getTotalCost(){\n        return (this.getIngredientCost() + this.taxes + this.fees);\n    }\n}\n\nmodule.exports = Order;", "const Ingredient = require(\"./Ingredient.js\");\nconst Recipe = require(\"./Recipe.js\");\nconst Transaction = require(\"./Transaction.js\");\nconst Order = require(\"./Order.js\");\n\nclass MerchantIngredient{\n    constructor(ingredient, quantity, parent){\n        this._quantity = quantity;\n        this.ingredient = ingredient;\n        this.parent = parent;\n    }\n\n    get quantity(){\n        let convertMultiplier = 1;\n        switch(controller.getUnitType(this.ingredient.unit)){\n            case \"mass\":\n                convertMultiplier = this.ingredient.convert.toMass;\n                break;\n            case \"volume\":\n                convertMultiplier = this.ingredient.convert.toVolume;\n                break;\n            case \"length\":\n                convertMultiplier = this.ingredient.convert.toLength;\n                break;\n            case \"bottle\":\n                return this._quantity * this.ingredient.convert.toBottle;\n        }\n        \n        return this._quantity * controller.unitMultiplier(controller.getBaseUnit(this.ingredient.unit), this.ingredient.unit) * convertMultiplier;\n    }\n\n    set quantity(quantity){\n        this._quantity = quantity;\n    }\n\n    /*\n    Takes in quantity and unit of that quantity and subtracts from the quantity on the ingredient\n    quantity: Number\n    unit: String\n    */\n    updateQuantity(quantity, unit){\n        quantity *= controller.unitMultiplier(unit, controller.getBaseUnit(unit))\n        switch(controller.getUnitType(this.ingredient.unit)){\n            case \"mass\": quantity /= this.ingredient.convert.toMass; break;\n            case \"volume\": quantity /= this.ingredient.convert.toVolume; break;\n            case \"length\": quantity /= this.ingredient.convert.toLength; break;\n        }\n        this._quantity += quantity;\n    }\n\n    getQuantityDisplay(){\n        return `${this.quantity.toFixed(2)} ${this.ingredient.unit.toUpperCase()}`;\n    }\n\n    /*\n    Gets the quantity of a single ingredient sold between two dates\n    Inputs:\n        from = start Date\n        to = end Date\n    return: quantity sold in default unit\n    */\n    getSoldQuantity(from, to){\n        let total = 0;\n        const {start, end} = this.parent.getTransactionIndices(from, to);\n\n        for(let i = start; i < end; i++){\n            total += this.parent.transactions[i].getIngredientQuantity(this.ingredient);\n        }\n\n        return total;\n    }\n}\n\nclass Merchant{\n        constructor(\n            name,\n            pos,\n            ingredients,\n            recipes,\n            transactions,\n            address,\n            owner,\n            id\n        ){\n        this.name = name;\n        this.pos = pos;\n        this.inventory = [];\n        this.recipes = [];\n        this.transactions = [];\n        this.orders = [];\n        this.address = address;\n        this.owner = {\n            id: owner._id,\n            email: owner.email,\n            merchants: owner.merchants,\n            name: owner.name\n        };\n        this.id = id;\n        \n        //populate ingredients\n        for(let i = 0; i < ingredients.length; i++){\n            const ingredient = new Ingredient(\n                ingredients[i].ingredient._id,\n                ingredients[i].ingredient.name,\n                ingredients[i].ingredient.category,\n                ingredients[i].ingredient.unit,\n                ingredients[i].ingredient.altUnit,\n                ingredients[i].ingredient.ingredients,\n                ingredients[i].ingredient.convert,\n                this\n            );\n\n            const merchantIngredient = new MerchantIngredient(\n                ingredient,\n                ingredients[i].quantity,\n                this\n            );\n\n            this.inventory.push(merchantIngredient);\n        }\n\n        //populate recipes\n        for(let i = 0; i < recipes.length; i++){\n            let ingredients = [];\n            for(let j = 0; j < recipes[i].ingredients.length; j++){\n                const ingredient = recipes[i].ingredients[j];\n                for(let k = 0; k < this.inventory.length; k++){\n                    if(ingredient.ingredient === this.inventory[k].ingredient.id){\n                        ingredients.push({\n                            ingredient: this.inventory[k].ingredient.id,\n                            quantity: ingredient.quantity,\n                            unit: ingredient.unit,\n                            baseUnitMultiplier: ingredient.baseUnitMultiplier\n                        });\n                        break;\n                    }\n                }\n            }\n\n            let newRecipe = new Recipe(\n                recipes[i]._id,\n                recipes[i].name,\n                recipes[i].category,\n                recipes[i].price,\n                ingredients,\n                this,\n                recipes[i].hidden\n            );\n\n            this.recipes.push(newRecipe);\n        }\n\n        //populate transactions\n        for(let i = 0; i < transactions.length; i++){\n            this.transactions.push(new Transaction(\n                transactions[i]._id,\n                transactions[i].date,\n                transactions[i].recipes,\n                this\n            ));\n        }\n\n        //populate orders\n        let from = new Date();\n        from.setDate(from.getDate() - 30);\n        let data = {\n            from: from,\n            to: new Date(),\n            ingredients: []\n        };\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/orders/get\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    this.addOrders(response);\n                    state.updateOrders(this.orders);\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n\n    /*\n    ingredient: [{\n        ingredient: {\n            _id: String,\n            name: String,\n            category: String,\n            specialUnit: String || undefined,\n        }\n        quantity: Number\n        defaultUnit: String\n    }]\n    */\n    addIngredients(ingredients){\n        for(let i = 0; i < ingredients.length; i++){\n            let ingredient = ingredients[i].ingredient;\n            let quantity = ingredients[i].quantity;\n            let unit = ingredients[i].ingredient.unit;\n\n            const createdIngredient = new Ingredient(\n                ingredient._id,\n                ingredient.name,\n                ingredient.category,\n                unit,\n                ingredients[i].ingredient.altUnit,\n                ingredient.ingredients,\n                ingredient.convert,\n                this\n            );\n\n            const merchantIngredient = new MerchantIngredient(createdIngredient, quantity, this);\n            this.inventory.push(merchantIngredient);\n        }\n    }\n\n    removeIngredient(ingredient){\n        const index = this.inventory.indexOf(ingredient);\n        if(index === undefined) return false;\n\n        for(let i = 0; i < this.inventory.length; i++){\n            for(let j = 0; j < this.inventory[i].ingredient.subIngredients.length; j++){\n                let subIngredients = this.inventory[i].ingredient.subIngredients;\n\n                if(subIngredients[j].ingredient === ingredient.ingredient){\n                    subIngredients.splice(j, 1);\n                    break;\n                }\n            }\n        }\n\n        this.inventory.splice(index, 1);\n    }\n\n    updateIngredients(ingredients){\n        for(let i = 0; i < ingredients.length; i++){\n            let inventoryItem = this.getIngredient(ingredients[i].ingredient._id);\n\n            inventoryItem.quantity = ingredients[i].quantity;\n            inventoryItem.ingredient.id = ingredients[i].ingredient._id;\n            inventoryItem.ingredient.name = ingredients[i].ingredient.name;\n            inventoryItem.ingredient.unit = ingredients[i].ingredient.unit;\n            inventoryItem.ingredient.convert = ingredients[i].ingredient.convert;\n            inventoryItem.ingredient.addIngredients(ingredients[i].ingredient.ingredients);\n        }\n    }\n\n    getIngredient(id){\n        for(let i = 0; i < this.inventory.length; i++){\n            if(this.inventory[i].ingredient.id === id) return this.inventory[i];\n        }\n    }\n\n    /*\n    Groups all of the merchant's ingredients by their category\n    Return: [{\n        name: category name,\n        ingredients: [MerchantIngredient Object]\n    }]\n    */\n    categorizeIngredients(){\n        let ingredientsByCategory = [];\n\n        for(let i = 0; i < this.inventory.length; i++){\n            let categoryExists = false;\n            for(let j = 0; j < ingredientsByCategory.length; j++){\n                if(this.inventory[i].ingredient.category === ingredientsByCategory[j].name){\n                    ingredientsByCategory[j].ingredients.push(this.inventory[i]);\n\n                    categoryExists = true;\n                    break;\n                }\n            }\n\n            if(!categoryExists){\n                ingredientsByCategory.push({\n                    name: this.inventory[i].ingredient.category,\n                    ingredients: [this.inventory[i]]\n                });\n            }\n        }\n\n        return ingredientsByCategory;\n    }\n\n    getRecipe(id){\n        for(let i = 0; i < this.recipes.length; i++){\n            if(this.recipes[i].id === id) return this.recipes[i];\n        }\n\n        return new Recipe(\n            \"\",\n            \"Deleted Recipe\",\n            \"\",\n            0,\n            [],\n            undefined,\n            true\n        );\n    }\n\n    /*\n    recipes: [{\n        _id: String\n        name: String\n        price: Number\n        ingredients: [{\n            ingredient: String (id)\n            quantity: Number\n        }]\n    }]\n    */\n    addRecipes(recipes){\n        for(let i = 0; i < recipes.length; i++){\n            let newRecipe = new Recipe(\n                recipes[i]._id,\n                recipes[i].name,\n                recipes[i].category,\n                recipes[i].price,\n                recipes[i].ingredients,\n                this,\n                recipes[i].hidden\n            );\n\n            newRecipe.calculateIngredientTotals();\n            this.recipes.push(newRecipe);\n        }\n    }\n\n    /*\n    Updates a single recipe\n    recipe: Recipe\n    updates: Object\n    */\n    updateRecipe(recipe, updates){\n        recipe.name = updates.name;\n        recipe.category = updates.category;\n        recipe.hidden = updates.category;\n        recipe.price = updates.price;\n\n        recipe.clearIngredients();\n        for(let i = 0; i < updates.ingredients.length; i++){\n            newIngredient = this.getIngredient(updates.ingredients[i].ingredient);\n            recipe.addIngredient(\n                newIngredient.ingredient, \n                updates.ingredients[i].quantity,\n                updates.ingredients[i].unit,\n                updates.ingredients[i].baseUnitMultiplier\n            );\n        }\n\n        recipe.calculateIngredientTotals();\n    }\n\n    removeRecipe(recipe){\n        const index = this.recipes.indexOf(recipe);\n        if(index === undefined) return false;\n\n        this.recipes.splice(index, 1);\n    }\n\n    /*\n    Groups recipes by their categories\n    return: [{\n        name: String,\n        recipes: [Recipe]\n    }]\n    */\n    categorizeRecipes(){\n        let categories = [];\n\n        for(let i = 0; i < this.recipes.length; i++){\n            let exists = false;\n            for(let j = 0; j < categories.length; j++){\n                if(this.recipes[i].category === categories[j].name){\n                    categories[j].recipes.push(this.recipes[i]);\n                    exists = true;\n                    break;\n                }\n            }\n\n            if(exists === false){\n                categories.push({\n                    name: this.recipes[i].category,\n                    recipes: [this.recipes[i]]\n                });\n            }\n        }\n\n        return categories;\n    }\n\n    getTransactions(from, to){\n        if(merchant.transactions.length <= 0) return [];\n\n        const {start, end} = this.getTransactionIndices(from, to);\n\n        return this.transactions.slice(start, end);\n    }\n\n    /*\n    transactions: [{\n        _id: String,\n        date: String (date)\n        recipes: [{\n            recipe: String (id)\n            quantity: Number\n        }]\n    }]\n    */\n    addTransactions(transactions, isNew = false){\n        for(let i = 0; i < transactions.length; i++){\n            let transaction = new Transaction(\n                transactions[i]._id,\n                transactions[i].date,\n                transactions[i].recipes,\n                this\n            );\n\n            this.transactions.push(transaction);\n\n            if(isNew === true){\n                for(let j = 0; j < transaction.recipes.length; j++){\n                    let recipe = transaction.recipes[j].recipe;\n                    for(let k = 0; k < recipe.ingredients.length; k++){\n                        let ingredient = recipe.ingredients[k].ingredient;\n                        let quantity = transaction.recipes[j].quantity * recipe.ingredients[k]._quantity;\n\n                        this.getIngredient(ingredient.id).updateQuantity(-quantity);\n                    }\n                }\n            }\n        }\n\n        this.transactions.sort((a, b) => (a.date > b.date) ? 1 : -1);\n    }\n\n    removeTransaction(transaction){\n        for(let j = 0; j < transaction.recipes.length; j++){\n            let recipe = transaction.recipes[j].recipe;\n            for(let k = 0; k < recipe.ingredients.length; k++){\n                let ingredient = recipe.ingredients[k].ingredient;\n                let quantity = transaction.recipes[j].quantity * recipe.ingredients[k].quantity;\n\n                this.getIngredient(ingredient.id).updateQuantity(quantity);\n            }\n        }\n\n        this.transactions.splice(this.transactions.indexOf(transaction), 1);\n\n        state.updateTransactions();\n    }\n\n    /*\n    orders: [{\n        _id: String,\n        name: String,\n        date: String (date)\n        taxes: Number\n        fees: Number\n        ingredients: [{\n            ingredient: String (id),\n            pricePerUnit: Number\n            quantity: Number\n        }]\n    }]\n    */\n    addOrders(orders, isNew = false){\n        for(let i = 0; i < orders.length; i++){\n            let order = new Order(\n                orders[i]._id,\n                orders[i].name,\n                orders[i].date,\n                orders[i].taxes,\n                orders[i].fees,\n                orders[i].ingredients,\n                this\n            );\n\n            this.orders.push(order);\n\n            if(isNew === true){\n                for(let j = 0; j < order.ingredients.length; j++){\n                    this.getIngredient(order.ingredients[j].ingredient.id).updateQuantity(order.ingredients[j].quantity, order.ingredients[j].ingredient.unit);\n                }\n            }\n        }\n    }\n\n    removeOrder(order){\n        const index = this.orders.indexOf(order);\n        if(index === undefined){\n            return false;\n        }\n\n        this.orders.splice(index, 1);\n\n        for(let i = 0; i < order.ingredients.length; i++){\n            for(let j = 0; j < this.inventory.length; j++){\n                if(order.ingredients[i].ingredient === this.inventory[j].ingredient){\n                    this.inventory[j].updateQuantity(-order.ingredients[i].quantity);\n                    break;\n                }\n            }\n        }\n    }\n\n    /*\n    Gets the quantity of each ingredient sold between two dates (dateRange)\n    Inputs:\n        dateRange: list containing a start date and an end date\n    Return:\n        [{\n            ingredient: Ingredient object,\n            quantity: quantity of ingredient sold in default unit\n        }]\n    */\n    getIngredientsSold(from, to = new Date()){\n        let recipes = this.getRecipesSold(from, to);\n        let ingredientList = [];\n\n        for(let i = 0; i < recipes.length; i++){\n            for(let j = 0; j < recipes[i].recipe.ingredients.length; j++){\n                let exists = false;\n\n                for(let k = 0; k < ingredientList.length; k++){\n                    if(ingredientList[k].ingredient === recipes[i].recipe.ingredients[j].ingredient){\n                        exists = true;\n                        ingredientList[k].quantity += recipes[i].quantity * recipes[i].recipe.ingredients[j].quantity;\n                        break;\n                    }\n                }\n\n                if(!exists){\n                    ingredientList.push({\n                        ingredient: recipes[i].recipe.ingredients[j].ingredient,\n                        quantity: recipes[i].quantity * recipes[i].recipe.ingredients[j].quantity\n                    });\n                }\n            }\n        }\n    \n        return ingredientList;\n    }\n\n    /*\n    Gets the number of recipes sold between two dates (dateRange)\n    Inputs:\n        dateRange: array containing a start date and an end date\n    Return:\n        [{\n            recipe: a recipe object\n            quantity: quantity of the recipe sold\n        }]\n    */\n    getRecipesSold(from = 0, to = new Date()){\n        if(from === 0) from = this.transactions[0].date;\n\n        const {start, end} = this.getTransactionIndices(from, to);\n\n        let recipeList = [];\n        for(let i = start; i < end; i++){\n            for(let j = 0; j < this.transactions[i].recipes.length; j++){\n                let exists = false;\n                for(let k = 0; k < recipeList.length; k++){\n                    if(recipeList[k].recipe === this.transactions[i].recipes[j].recipe){\n                        exists = true;\n                        recipeList[k].quantity += this.transactions[i].recipes[j].quantity;\n                        break;\n                    }\n                }\n\n                if(!exists){\n                    recipeList.push({\n                        recipe: this.transactions[i].recipes[j].recipe,\n                        quantity: this.transactions[i].recipes[j].quantity\n                    });\n                }\n            }\n        }\n\n        return recipeList;\n    }\n\n    getTransactionIndices(from, to){\n        let start = 0;\n        let end = 0;\n\n        if(\n            this.transactions.length === 0 ||\n            from > this.transactions[0].date ||\n            to >= this.transactions[this.transactions.length-1].date\n        ){\n            for(let i = this.transactions.length - 1; i >= 0; i--){\n                if(this.transactions[i].date > from){\n                    end = i + 1;\n                    break;\n                }\n            }\n        \n            for(let i = 0; i < this.transactions.length; i++){\n                if(this.transactions[i].date <= to){\n                    start = i;\n                    break;\n                }\n            }\n        }\n        return {start: start, end: end};\n    }\n}\n\nmodule.exports = Merchant;", "const Merchant = require(\"../classes/Merchant\");\n\nlet account = {\n    display: function(){\n        document.getElementById(\"accountStrandTitle\").innerText = merchant.owner.name;\n        document.getElementById(\"accountEmail\").value = merchant.owner.email;\n        document.getElementById(\"accountOwnerName\").value = merchant.owner.name;\n        document.getElementById(\"accountAddress\").value = merchant.address;\n\n        document.getElementById(\"accountUpdate\").onclick = ()=>{this.updateData()};\n        document.getElementById(\"deleteMerchant\").onclick = ()=>{controller.openModal(\"confirmDeleteMerchant\")};\n\n        //Display alternate locations\n        document.getElementById(\"settingsAddMerchant\").onclick = ()=>{controller.openModal(\"newMerchant\")};\n        let container = document.getElementById(\"settingsMerchants\");\n\n        while(container.children.length > 0){\n            container.removeChild(container.firstChild);\n        }\n\n        for(let i = 0; i < merchant.owner.merchants.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = merchant.owner.merchants[i].name;\n            button.classList.add(\"button\");\n            button.onclick = ()=>{this.switchMerchant(merchant.owner.merchants[i]._id)};\n            container.appendChild(button);\n        }\n\n        //Handle the password changey stuffs\n        let passButton = document.getElementById(\"accountShowPassword\");\n        let passBox = document.getElementById(\"changePasswordBox\");\n        passButton.onclick = ()=>{\n            passButton.style.display = \"none\";\n            passBox.style.display = \"flex\";\n        };\n\n        document.getElementById(\"cancelPasswordChange\").onclick = ()=>{\n            passButton.style.display = \"block\";\n            passBox.style.display = \"none\";\n            document.getElementById(\"accountCurrentPassword\").value = \"\";\n            document.getElementById(\"accountNewPassword\").value = \"\";\n            document.getElementById(\"accountConfirmPassword\").value = \"\";\n        };\n\n        document.getElementById(\"changePasswordButton\").onclick = ()=>{this.updatePassword()};\n        document.getElementById(\"newMerchantSquareButton\").onclick = ()=>{this.getSquareLocations()};\n    },\n\n    updateData: function(){\n        let data = {\n            email: document.getElementById(\"accountEmail\").value,\n            name: document.getElementById(\"accountOwnerName\").value,\n            address: document.getElementById(\"accountAddress\").value\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/merchant/update\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    controller.createBanner(\"DATA UPDATED\", \"success\");\n                    if(merchant.owner.email !== response.email){\n                        controller.createBanner(\"YOU MUST VALIDATE YOUR NEW EMAIL ADDRESS BEFORE YOU CAN LOG IN AGAIN\", \"alert\");\n                        merchant.owner.email = response.email;\n                    }\n\n                    merchant.owner.name = response.name;\n                    merchant.address = response.address;\n\n                    document.getElementById(\"accountOwnerName\").value = merchant.owner.name;\n                    document.getElementById(\"accountStrandTitle\").innerText = merchant.owner.name;\n                    document.getElementById(\"accountEmail\").value = merchant.owner.email;\n                    document.getElementById(\"accountAddress\").value = merchant.address;\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    updatePassword: function(){\n        let data = {\n            current: document.getElementById(\"accountCurrentPassword\").value,\n            new: document.getElementById(\"accountNewPassword\").value,\n            confirm: document.getElementById(\"accountConfirmPassword\").value\n        };\n        \n        if(data.new !== data.confirm){\n            return controller.createBanner(\"PASSWORDS DO NOT MATCH\");\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/merchant/password\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    window.location.replace(response.redirect);\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    switchMerchant: function(id){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/merchant/${id}`)\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    window.merchant = new Merchant(\n                        response[1].name,\n                        response[1].pos,\n                        response[1].inventory,\n                        response[1].recipes,\n                        response[2],\n                        (response[1].address === undefined) ? \"\" : response[1].address.full,\n                        response[0]\n                    );\n\n                    state.updateMerchant();\n                    controller.openStrand(\"home\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    deleteMerchant: function(){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/merchant\", {method: \"delete\"})\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    window.merchant = new Merchant(\n                        response[1].name,\n                        response[1].pos,\n                        response[1].inventory,\n                        response[1].recipes,\n                        response[2],\n                        (response[1].address === undefined) ? \"\" : response[1].address.full,\n                        response[0]\n                    );\n                    state.updateMerchant();\n\n                    controller.closeModal();\n                    controller.openStrand(\"home\");\n                    controller.createBanner(\"MERCHANT DELETED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    getSquareLocations: function(){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/square/locations\")\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    controller.openModal(\"squareLocations\", response);\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = account;", "let ingredientDetails = {\n    dailyUse: 0,\n\n    display: function(ingredient){\n        document.getElementById(\"editIngBtn\").onclick = ()=>{controller.openSidebar(\"editIngredient\", ingredient)};\n        document.getElementById(\"removeIngBtn\").onclick = ()=>{controller.openModal(\"confirmDeleteIngredient\", ingredient)};\n        document.getElementById(\"ingredientDetailsCategory\").innerText = ingredient.ingredient.category;\n        document.getElementById(\"ingredientDetailsName\").innerText = ingredient.ingredient.name;\n        document.getElementById(\"ingredientStock\").innerText = ingredient.getQuantityDisplay();\n\n        let unitCostElement = document.getElementById(\"unitCostDisplay\");\n        let unitCost = ingredient.ingredient.getUnitCost();\n        if(unitCost === 0){\n            unitCostElement.parentElement.style.display = \"none\";\n        }else{\n            unitCostElement.parentElement.style.display = \"block\";\n            unitCostElement.innerText = `$${unitCost.toFixed(2)}`;\n        }\n\n\n        let subIngredientList = document.getElementById(\"subIngredientList\");\n        let template = document.getElementById(\"ingredientRecipe\").content.children[0];\n\n        while(subIngredientList.children.length > 0){\n            subIngredientList.removeChild(subIngredientList.firstChild);\n        }\n\n        for(let i = 0; i < ingredient.ingredient.subIngredients.length; i++){\n            let subIngredient = ingredient.ingredient.subIngredients[i];\n            let button = template.cloneNode(true);\n            button.children[0].innerText = subIngredient.ingredient.name;\n            button.children[1].innerText = subIngredient.getDisplayQuantity();\n            button.onclick = ()=>{this.display(merchant.getIngredient(subIngredient.ingredient.id))};\n            subIngredientList.appendChild(button);\n        }\n    },\n\n    remove: function(ingredient){\n        for(let i = 0; i < merchant.recipes.length; i++){\n            for(let j = 0; j < merchant.recipes[i].ingredients.length; j++){\n                if(ingredient.ingredient === merchant.recipes[i].ingredients[j].ingredient){\n                    controller.createBanner(\"MUST REMOVE INGREDIENT FROM ALL RECIPES BEFORE REMOVING FROM INVENTORY\", \"error\");\n                    return;\n                }\n            }\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/ingredients/remove/${ingredient.ingredient.id}`, {\n            method: \"delete\",\n        })\n            .then((response) => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.removeIngredient(ingredient);\n                    state.updateIngredients();\n                    \n                    controller.openStrand(\"ingredients\");\n                    controller.closeModal();\n                    controller.createBanner(\"INGREDIENT REMOVED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = ingredientDetails;", "let newIngredient = {\n    display: function(){\n        let selector = document.getElementById(\"unitSelector\");\n        let name = document.getElementById(\"newIngName\");\n\n        name.focus();\n        name.placeholder = \"NAME\";\n        document.getElementById(\"newIngCategory\").placeholder = \"CATEGORY\";\n        document.getElementById(\"newIngQuantity\").placeholder = \"QUANTITY\";\n        document.getElementById(\"bottleSizeLabel\").style.display = \"none\";\n        document.getElementById(\"volumeConvertUnitLeft\").innerText = \"G\";\n        document.getElementById(\"lengthConvertUnitLeft\").innerText = \"G\";\n        selector.value = \"g\";\n\n        selector.onchange = ()=>{this.unitChange()};\n        document.getElementById(\"submitNewIng\").onclick = ()=>{this.submit()};\n    },\n\n    unitChange: function(){\n        let select = document.getElementById(\"unitSelector\");\n        let bottleLabel = document.getElementById(\"bottleSizeLabel\");\n        if(select.value === \"bottle\"){\n            bottleLabel.style.display = \"block\";\n        }else{\n            bottleLabel.style.display = \"none\";\n        }\n\n        let convertMass = document.getElementById(\"newIngMassConvert\");\n        let convertVolume = document.getElementById(\"newIngVolumeConvert\");\n        let convertLength = document.getElementById(\"newIngLengthConvert\");\n\n        let massLeft = document.getElementById(\"massConvertUnitLeft\");\n        let volumeLeft = document.getElementById(\"volumeConvertUnitLeft\");\n        let lengthLeft = document.getElementById(\"lengthConvertUnitLeft\");\n        if(controller.getUnitType(select.value) === \"mass\"){\n            convertMass.style.display = \"none\";\n            convertVolume.style.display = \"flex\";\n            convertLength.style.display = \"flex\";\n            volumeLeft.innerText = select.value.toUpperCase();\n            lengthLeft.innerText = select.value.toUpperCase();\n        }else if(controller.getUnitType(select.value) === \"volume\"){\n            convertMass.style.display = \"flex\";\n            convertVolume.style.display = \"none\";\n            convertLength.style.display = \"flex\";\n            massLeft.innerText = select.value.toUpperCase();\n            lengthLeft.innerText = select.value.toUpperCase();\n        }else if(controller.getUnitType(select.value) === \"length\"){\n            convertMass.style.display = \"flex\";\n            convertVolume.style.display = \"flex\";\n            convertLength.style.display = \"none\";\n            massLeft.innerText = select.value.toUpperCase();\n            volumeLeft.innerText = select.value.toUpperCase();\n        }else if(select.value === \"bottle\"){\n            convertMass.style.display =\"flex\";\n            convertVolume.style.display = \"none\";\n            convertLength.style.display = \"flex\";\n            massLeft.innerText = \"ML\";\n            lengthLeft.innerText = \"ML\";\n            let bottleSelect = document.getElementById(\"bottleUnits\");\n            bottleSelect.onchange = ()=>{\n                massLeft.innerText = bottleSelect.value.toUpperCase();\n                lengthLeft.innerText = bottleSelect.value.toUpperCase();\n            }\n        }\n    },\n\n    submit: function(){\n        let unitSelector = document.getElementById(\"unitSelector\");\n        let quantityValue = parseFloat(document.getElementById(\"newIngQuantity\").value);\n\n        let unit = unitSelector.value;\n\n        let massDiv = document.getElementById(\"newIngMassConvert\");\n        let volumeDiv = document.getElementById(\"newIngVolumeConvert\");\n        let lengthDiv = document.getElementById(\"newIngLengthConvert\");\n\n        let massLeft = controller.toBase(massDiv.children[0].value, unit)\n        let massRight = controller.toBase(massDiv.children[3].value, massDiv.children[4].value);\n        let volumeLeft = controller.toBase(volumeDiv.children[0].value, unit)\n        let volumeRight = controller.toBase(volumeDiv.children[3].value, volumeDiv.children[4].value);\n        let lengthLeft = controller.toBase(lengthDiv.children[0].value, unit)\n        let lengthRight = controller.toBase(lengthDiv.children[3].value, lengthDiv.children[4].value);\n\n        let newIngredient = {\n            ingredient: {\n                name: document.getElementById(\"newIngName\").value,\n                category: document.getElementById(\"newIngCategory\").value,\n                unit: unit,\n                convert: {\n                    toMass: massRight / massLeft,\n                    toVolume: volumeRight / volumeLeft,\n                    toLength: lengthRight / lengthLeft,\n                    toBottle: 0\n                }\n            },\n            quantity: controller.toBase(quantityValue, unit)\n        };\n\n        if(isNaN(newIngredient.ingredient.convert.toMass)) newIngredient.ingredient.convert.toMass = 0;\n        if(isNaN(newIngredient.ingredient.convert.toVolume)) newIngredient.ingredient.convert.toVolume = 0;\n        if(isNaN(newIngredient.ingredient.convert.toLength)) newIngredient.ingredient.convert.toLength = 0;\n\n        let convert = newIngredient.ingredient.convert;\n        switch(controller.getUnitType(unit)){\n            case \"mass\": convert.toMass = 1; break;\n            case \"volume\": convert.toVolume = 1; break;\n            case \"length\": convert.toLength = 1; break;\n            case \"bottle\":\n                let bottleQuant = document.getElementById(\"bottleSize\").value;\n                let bottleUnit = document.getElementById(\"bottleUnits\").value;\n                newIngredient.ingredient.altUnit = bottleUnit;\n                newIngredient.ingredient.convert.toVolume = 1;\n                newIngredient.ingredient.convert.toBottle = 1 / controller.toBase(bottleQuant, bottleUnit);\n                newIngredient.quantity = quantityValue * controller.toBase(bottleQuant, bottleUnit);\n                break;\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/ingredients/create\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newIngredient)\n        })\n            .then((response) => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.addIngredients([response]);\n                    state.updateIngredients();\n                    controller.openStrand(\"ingredients\");\n\n                    controller.createBanner(\"INGREDIENT CREATED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = newIngredient;", "let editIngredient = {\n    display: function(ingredient){\n        let buttonList = document.getElementById(\"unitButtons\");\n        let quantLabel = document.getElementById(\"editIngQuantityLabel\");\n        let name = document.getElementById(\"editIngName\");\n        let unit = ingredient.ingredient.unit;\n\n        name.focus();\n        document.getElementById(\"editSubIngredients\").onclick = ()=>{controller.openModal(\"editSubIngredients\", ingredient.ingredient)};\n\n        //Clear any existing data\n        while(buttonList.children.length > 0){\n            buttonList.removeChild(buttonList.firstChild);\n        }\n\n        //Populate basic fields\n        name.innerText = ingredient.ingredient.name;\n        document.getElementById(\"editIngName\").value = ingredient.ingredient.name;\n        document.getElementById(\"editIngCategory\").value = ingredient.ingredient.category;\n        quantLabel.innerText = `CURRENT STOCK (${unit.toUpperCase()})`;\n        document.getElementById(\"editIngSubmit\").onclick = ()=>{this.submit(ingredient)};\n\n        //Populate the unit buttons\n        let units = ingredient.ingredient.getPotentialUnits();\n        let ingredientUnit = (unit === \"bottle\") ? ingredient.ingredient.altUnit : unit;\n        for(let i = 0; i < units.length; i++){\n            let button = document.createElement(\"button\");\n            button.classList.add(\"unitButton\");\n            button.innerText = units[i].toUpperCase();\n            button.onclick = ()=>{this.changeUnit(button, ingredient)};\n            buttonList.appendChild(button);\n            \n            if(units[i] === ingredientUnit) button.classList.add(\"unitActive\");\n        }\n\n        //Offer conversions\n        let massDiv = document.getElementById(\"editIngMass\");\n        let volumeDiv = document.getElementById(\"editIngVolume\");\n        let lengthDiv = document.getElementById(\"editIngLength\");\n        let multiplier = controller.unitMultiplier(controller.getBaseUnit(unit), unit);\n        if(unit === \"bottle\") multiplier = controller.unitMultiplier(controller.getBaseUnit(ingredient.ingredient.altUnit), ingredient.ingredient.altUnit);\n\n        massDiv.children[0].value = 1;\n        massDiv.children[1].innerText = (unit === \"bottle\") ? ingredient.ingredient.altUnit.toUpperCase() : unit.toUpperCase();\n        massDiv.children[3].value = parseFloat((ingredient.ingredient.convert.toMass / multiplier).toFixed(3));\n        massDiv.children[4].value = \"g\";\n        massDiv.children[4].previousUnit = \"g\";\n        massDiv.children[4].onchange = ()=>{this.changeConversionSelect(massDiv)};\n\n        volumeDiv.children[0].value = 1;\n        volumeDiv.children[1].innerText = (unit === \"bottle\") ? ingredient.ingredient.altUnit.toUpperCase() : unit.toUpperCase();\n        volumeDiv.children[3].value = parseFloat((ingredient.ingredient.convert.toVolume / multiplier).toFixed(3));\n        volumeDiv.children[4].value = \"l\";\n        volumeDiv.children[4].previousUnit = \"l\";\n        volumeDiv.children[4].onchange = ()=>{this.changeConversionSelect(volumeDiv)};\n\n        lengthDiv.children[0].value = 1;\n        lengthDiv.children[1].innerText = (unit === \"bottle\") ? ingredient.ingredient.altUnit.toUpperCase() : unit.toUpperCase();\n        lengthDiv.children[3].value = parseFloat((ingredient.ingredient.convert.toLength / multiplier).toFixed(3));\n        lengthDiv.children[4].value = \"m\";\n        lengthDiv.children[4].previousUnit = \"m\";\n        lengthDiv.children[4].onchange = ()=>{this.changeConversionSelect(lengthDiv)};\n\n        switch(controller.getBaseUnit(unit)){\n            case \"g\": \n                massDiv.style.display = \"none\";\n                volumeDiv.style.display = \"flex\";\n                lengthDiv.style.display = \"flex\";\n                break;\n            case \"l\":\n                massDiv.style.display = \"flex\";\n                volumeDiv.style.display = \"none\";\n                lengthDiv.style.display = \"flex\";\n                break;\n            case \"m\":\n                massDiv.style.display = \"flex\";\n                volumeDiv.style.display = \"flex\";\n                lengthDiv.style.display = \"none\";\n        }\n\n        let quantInput = document.createElement(\"input\");\n        quantInput.id = \"editIngQuantity\";\n        quantInput.type = \"number\";\n        quantInput.min = \"0\";\n        quantInput.step = \"0.01\";\n        quantInput.value = ingredient.quantity.toFixed(2);\n        quantLabel.appendChild(quantInput);\n        \n        let bottleLabel = document.getElementById(\"editSpecialLabel\");\n        if(ingredient.ingredient.unit === \"bottle\"){\n            bottleLabel.innerText = `BOTTLE SIZE (${ingredient.ingredient.altUnit.toUpperCase()})`;\n            let bottleInput = document.createElement(\"input\");\n            bottleInput.id = \"editSpecialInput\";\n            bottleInput.type = \"number\";\n            bottleInput.min = \"0\";\n            bottleInput.value = 1 / ingredient.ingredient.convert.toBottle * controller.unitMultiplier(controller.getBaseUnit(ingredient.ingredient.altUnit), ingredient.ingredient.altUnit);\n            bottleLabel.appendChild(bottleInput);\n            bottleLabel.style.display = \"flex\";\n        }else{\n            bottleLabel.style.display = \"none\";\n        }\n    },\n\n    changeUnit: function(button, ingredient){\n        //update current stock quantity\n        let label = {};\n        let newValue = 0;\n        if(ingredient.ingredient.unit === \"bottle\"){\n            label = document.getElementById(\"editSpecialLabel\");\n            label.innerText = `BOTTLE SIZE (${button.innerText})`;\n            newValue = controller.unitMultiplier(controller.getBaseUnit(ingredient.ingredient.altUnit), button.innerText.toLowerCase()) / ingredient.ingredient.convert.toBottle;\n        }else{\n            label = document.getElementById(\"editIngQuantityLabel\");\n            label.innerText = `CURRENT STOCK (${button.innerText})`;\n            newValue = ingredient.quantity * controller.unitMultiplier(ingredient.ingredient.unit, button.innerText.toLowerCase());\n        }\n        \n        let input = document.createElement(\"input\");\n        input.type = \"number\";\n        input.min = \"0\";\n        input.step = \"0.01\";\n        input.value = newValue.toFixed(2);\n        label.appendChild(input);\n        \n        //update conversions\n        let massDiv = document.getElementById(\"editIngMass\");\n        let volumeDiv = document.getElementById(\"editIngVolume\");\n        let lengthDiv = document.getElementById(\"editIngLength\");\n        \n        massDiv.children[1].innerText = button.innerText;\n        volumeDiv.children[1].innerText = button.innerText;\n        lengthDiv.children[1].innerText = button.innerText;\n        let multiplier = controller.unitMultiplier(document.querySelector(\".unitActive\").innerText.toLowerCase(), button.innerText.toLowerCase());\n    \n        massDiv.children[0].value = parseFloat((massDiv.children[0].value * multiplier).toFixed(3));\n        massDiv.children[3].value = parseFloat((massDiv.children[3].value * multiplier).toFixed(3));\n        volumeDiv.children[0].value = parseFloat((volumeDiv.children[0].value * multiplier).toFixed(3));\n        volumeDiv.children[3].value = parseFloat((volumeDiv.children[3].value * multiplier).toFixed(3));\n        lengthDiv.children[0].value = parseFloat((lengthDiv.children[0].value * multiplier).toFixed(3));\n        lengthDiv.children[3].value = parseFloat((lengthDiv.children[3].value *= multiplier).toFixed(3));\n\n        //Update the buttons\n        let buttons = document.getElementById(\"unitButtons\");\n\n        for(let i = 0; i < buttons.children.length; i++){\n            buttons.children[i].classList.remove(\"unitActive\");\n        }\n\n        button.classList.add(\"unitActive\");\n    },\n\n    changeConversionSelect: function(div){\n        let multiplier = controller.unitMultiplier(div.children[4].previousUnit, div.children[4].value);\n        div.children[3].value = parseFloat((div.children[3].value * multiplier).toFixed(3));\n        div.children[4].previousUnit = div.children[4].value;\n    },\n\n    submit: function(ingredient){\n        let quantity = parseFloat(document.getElementById(\"editIngQuantityLabel\").children[0].value);\n        let selectedUnit = document.getElementById(\"unitButtons\").querySelector(\".unitActive\").innerText.toLowerCase();\n        let unit = (ingredient.ingredient.unit === \"bottle\") ? \"bottle\" : selectedUnit;\n\n        let massDiv = document.getElementById(\"editIngMass\");\n        let volumeDiv = document.getElementById(\"editIngVolume\");\n        let lengthDiv = document.getElementById(\"editIngLength\");\n\n        let leftMass = massDiv.children[0].value;\n        let rightMass = massDiv.children[3].value;\n        let leftVolume = volumeDiv.children[0].value;\n        let rightVolume = volumeDiv.children[3].value;\n        let leftLength = lengthDiv.children[0].value;\n        let rightLength = lengthDiv.children[3].value;\n        let leftUnit = massDiv.children[1].innerText.toLowerCase();\n        let rightUnitMass = massDiv.children[4].value;\n        let rightUnitVolume = volumeDiv.children[4].value;\n        let rightUnitLength = lengthDiv.children[4].value;\n        let leftMultiplier = controller.unitMultiplier(leftUnit, controller.getBaseUnit(leftUnit));\n\n        leftMass *= leftMultiplier;\n        leftVolume *= leftMultiplier;\n        leftLength *= leftMultiplier;\n        rightMass *= controller.unitMultiplier(rightUnitMass, controller.getBaseUnit(rightUnitMass));\n        rightVolume *= controller.unitMultiplier(rightUnitVolume, controller.getBaseUnit(rightUnitVolume));\n        rightLength *= controller.unitMultiplier(rightUnitLength, controller.getBaseUnit(rightUnitLength));\n\n        let data = {\n            ingredient: {\n                id: ingredient.ingredient.id,\n                name: document.getElementById(\"editIngName\").value,\n                category: document.getElementById(\"editIngCategory\").value,\n                unit: unit,\n                convert: {\n                    toMass: rightMass / leftMass,\n                    toVolume: rightVolume / leftVolume,\n                    toLength: rightLength / leftLength,\n                    toBottle: 0\n                }\n            },\n            quantity: quantity * controller.unitMultiplier(unit, controller.getBaseUnit(unit))\n        };\n\n        switch(controller.getUnitType(unit)){\n            case \"mass\": data.ingredient.convert.toMass = 1; break;\n            case \"volume\": data.ingredient.convert.toVolume = 1; break;\n            case \"length\": data.ingredient.convert.toLength = 1; break;\n            case \"bottle\":\n                let bottleQuant = document.getElementById(\"editSpecialInput\").value;\n                data.ingredient.altUnit = selectedUnit;\n                data.ingredient.convert.toVolume = 1;\n                data.ingredient.convert.toBottle = 1 / controller.toBase(bottleQuant, selectedUnit);\n                data.quantity = quantity * controller.toBase(bottleQuant, selectedUnit);\n                break;\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/ingredients/update\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then((response)=>{\n            if(typeof(response) === \"string\"){\n                controller.createBanner(response, \"error\");\n            }else{\n                merchant.updateIngredients([response]);\n                state.updateIngredients();\n                controller.openStrand(\"ingredients\");\n                controller.createBanner(\"INGREDIENT UPDATED\", \"success\");\n            }\n        })\n        .catch((err)=>{\n            controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n        })\n        .finally(()=>{\n            loader.style.display = \"none\";\n        });\n    }\n}\n\nmodule.exports = editIngredient;", "let newOrder = {\n    display: function(){\n        document.getElementById(\"sidebarDiv\").classList.add(\"sidebarWide\");\n        document.getElementById(\"newOrderIngredientList\").style.display = \"flex\";\n\n        let selectedList = document.getElementById(\"selectedIngredientList\");\n        while(selectedList.children.length > 0){\n            selectedList.removeChild(selectedList.firstChild);\n        }\n\n        let ingredientList = document.getElementById(\"newOrderIngredients\");\n        ingredientList.children[0].onkeyup = ()=>{this.searchIngredients()};\n        while(ingredientList.children.length > 0){\n            ingredientList.removeChild(ingredientList.firstChild);\n        }\n\n        merchant.inventory.sort((a, b) => (a.ingredient.name > b.ingredient.name) ? 1 : -1);\n        for(let i = 0; i < merchant.inventory.length; i++){\n            let ingredient = document.createElement(\"button\");\n            ingredient.classList = \"choosable\";\n            ingredient.innerText = merchant.inventory[i].ingredient.name;\n            ingredient.onclick = ()=>{this.addIngredient(merchant.inventory[i], ingredient)};\n            ingredientList.appendChild(ingredient);\n        }\n\n        document.getElementById(\"submitNewOrder\").onclick = ()=>{this.submit()};\n    },\n\n    addIngredient: function(ingredient, element){\n        element.style.display = \"none\";\n\n        let div = document.getElementById(\"selectedIngredient\").content.children[0].cloneNode(true);\n        div.ingredient = ingredient;\n        div.children[0].children[1].onclick = ()=>{this.removeIngredient(div, element)};\n\n        div.children[0].children[0].innerText = `${ingredient.ingredient.name} (${ingredient.ingredient.unit.toUpperCase()})`;\n\n        document.getElementById(\"selectedIngredientList\").appendChild(div);\n    },\n\n    removeIngredient: function(selectedElement, element){\n        selectedElement.parentElement.removeChild(selectedElement);\n        element.style.display = \"block\";\n    },\n\n    submit: function(){\n        let date = document.getElementById(\"newOrderDate\").valueAsDate;\n        let taxes = document.getElementById(\"orderTaxes\").value * 100;\n        let fees = document.getElementById(\"orderFees\").value * 100;\n        let ingredients = document.getElementById(\"selectedIngredientList\").children;\n        \n        if(date === null){\n            controller.createBanner(\"DATE IS REQUIRED FOR ORDERS\", \"error\");\n            return;\n        }\n    \n        date.setHours(0, 0, 0, 0);\n\n        let data = {\n            name: document.getElementById(\"newOrderName\").value,\n            date: date,\n            taxes: taxes,\n            fees: fees,\n            ingredients: []\n        };\n\n        for(let i = 0; i < ingredients.length; i++){\n            let quantity = ingredients[i].children[1].children[0].value;\n            let price = ingredients[i].children[1].children[1].value;\n            let unit = (ingredients[i].ingredient.ingredient.unit === \"bottle\") ? ingredients[i].ingredient.ingredient.altUnit : ingredients[i].ingredient.ingredient.unit;\n\n            let newIngredient = {\n                ingredient: ingredients[i].ingredient.ingredient.id,\n                quantity: controller.toBase(quantity, unit),\n                pricePerUnit: (price * 100) / controller.unitMultiplier(unit, controller.getBaseUnit(unit))\n            };\n\n            if(ingredients[i].ingredient.ingredient.unit === \"bottle\"){\n                let toBottle = ingredients[i].ingredient.ingredient.convert.toBottle;\n                newIngredient.quantity = quantity / toBottle;\n                newIngredient.pricePerUnit = toBottle * (price * 100);\n            }\n\n            data.ingredients.push(newIngredient);\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/order/create\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then((response)=>response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    let from = new Date();\n                    from.setDate(from.getDate() - 30);\n                    if(new Date(response.date) > from){\n                        merchant.addOrders([response], true);\n                        state.updateOrders();\n                    }\n                    \n                    controller.openStrand(\"orders\", merchant.orders);\n                    controller.createBanner(\"NEW ORDER CREATED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                console.error(err);\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    searchIngredients: function(){\n        let items = document.getElementById(\"newOrderIngredients\").children;\n        let searchString = items[0].value.toLowerCase();\n\n        if(searchString === \"\"){\n            for(let i = 1; i < items.length; i++){\n                items[i].style.display = \"flex\";\n            }\n        }else{\n            for(let i = 1; i < items.length; i++){\n                if(items[i].innerText.toLowerCase().includes(searchString)){\n                    items[i].style.display = \"flex\";\n                }else{\n                    items[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n};\n\nmodule.exports = newOrder;", "let newRecipe = {\n    unchosen: [],\n\n    display: function(){\n        document.getElementById(\"sidebarDiv\").classList.add(\"sidebarWide\");\n        document.getElementById(\"newRecipeName\").value = \"\";\n        document.getElementById(\"newRecipeCategory\").value = \"\";\n        document.getElementById(\"newRecipePrice\").value = \"\";\n        let chosen = document.getElementById(\"newRecipeChosenList\");\n        \n        while(chosen.children.length > 0){\n            chosen.removeChild(chosen.firstChild);\n        }\n\n        document.getElementById(\"submitNewRecipe\").onclick = ()=>{this.submit()};\n        document.getElementById(\"newRecipeSearch\").onkeyup = ()=>{this.populateChoices()};\n\n        this.unchosen = [];\n        for(let i = 0; i < merchant.inventory.length; i++){\n            this.unchosen.push(merchant.inventory[i].ingredient);\n        }\n\n        this.populateChoices();\n    },\n\n    populateChoices: function(){\n        this.unchosen.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        let searchStr = document.getElementById(\"newRecipeSearch\").value;\n\n        let list = document.getElementById(\"recipeChoices\");\n        while(list.children.length > 0){\n            list.removeChild(list.firstChild);\n        }\n\n        for(let i = 0; i < this.unchosen.length; i++){\n            if(searchStr === \"\" || this.unchosen[i].name.toLowerCase().includes(searchStr)){\n                let ingredient = document.createElement(\"button\");\n                ingredient.innerText = this.unchosen[i].name;\n                ingredient.classList.add(\"choosable\");\n                ingredient.classList.add(\"selection\");\n                ingredient.onclick = ()=>{\n                    this.add(this.unchosen[i]);\n                    this.unchosen.splice(i, 1);\n                    this.populateChoices();\n                };\n                list.appendChild(ingredient);\n            }\n        }\n    },\n\n    add: function(ingredient){\n        let element = document.getElementById(\"newRecipeChosenIngredient\").content.children[0].cloneNode(true);\n        element.children[0].children[0].innerText = ingredient.name;\n        element.children[1].children[0].placeholder = \"QUANTITY\";\n        element.children[0].children[1].onclick = ()=>{\n            this.unchosen.push(ingredient);\n            element.parentElement.removeChild(element);\n            this.populateChoices();\n        };\n        element.ingredient = ingredient;\n\n        let select = element.children[1].children[1];\n        if(ingredient.convert.toMass > 0) select.children[0].style.display = \"block\";\n        if(ingredient.convert.toVolume > 0) select.children[1].style.display = \"block\";\n        if(ingredient.convert.toLength > 0) select.children[2].style.display = \"block\";\n\n        select.value = (ingredient.unit === \"bottle\") ? \"ml\" : ingredient.unit;\n\n        document.getElementById(\"newRecipeChosenList\").appendChild(element);\n    },\n\n    submit: function(){\n        let data = {\n            name: document.getElementById(\"newRecipeName\").value,\n            price: parseInt(document.getElementById(\"newRecipePrice\").value * 100),\n            category: document.getElementById(\"newRecipeCategory\").value,\n            ingredients: []\n        }\n\n        let ingredients = document.getElementById(\"newRecipeChosenList\").children;\n        for(let i = 0; i < ingredients.length; i++){\n            let ingredient = ingredients[i].ingredient;\n            let unit = ingredients[i].children[1].children[1].value;\n            data.ingredients.push({\n                ingredient: ingredient.id,\n                quantity: controller.toBase(ingredients[i].children[1].children[0].value, unit),\n                unit: unit\n            });\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/recipe/create\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.addRecipes([response]);\n                    state.updateRecipes();\n\n                    controller.createBanner(\"RECIPE CREATED\", \"success\");\n                    controller.openStrand(\"recipeBook\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n};\n\nmodule.exports = newRecipe;", "module.exports = {\n    unused: [],\n\n    display: function(recipe){\n        let title = document.getElementById(\"editRecipeTitle\");\n        let name = document.getElementById(\"editRecipeName\");\n        let category = document.getElementById(\"editRecipeCategory\");\n        let price = document.getElementById(\"editRecipePrice\");\n        title.innerText = recipe.name;\n        name.children[0].value = recipe.name;\n        category.children[0].value = recipe.category;\n        price.children[0].value = recipe.price;\n\n        if(merchant.pos === \"none\"){\n            name.style.display = \"flex\";\n            category.style.display = \"flex\";\n            price.style.display = \"flex\";\n            title.style.display = \"none\";\n        }\n\n        document.getElementById(\"sidebarDiv\").classList.add(\"sidebarWide\");\n        document.getElementById(\"editRecipeSearch\").oninput = ()=>{this.search()};\n        document.getElementById(\"editRecipeSubmit\").onclick = ()=>{this.submit(recipe.id)};\n        let used = document.getElementById(\"editRecipeUsed\");\n        let template = document.getElementById(\"editRecipeInputItem\").content.children[0];\n        let tempList = [];\n\n        while(used.children.length > 0){\n            used.removeChild(used.firstChild);\n        }\n\n        for(let i = 0; i < recipe.ingredients.length; i++){\n            tempList.push(recipe.ingredients[i].ingredient.id);\n\n            let ingredient = template.cloneNode(true);\n            ingredient.ingredient = recipe.ingredients[i].ingredient;\n            ingredient.children[0].children[0].innerText = recipe.ingredients[i].ingredient.name;\n            ingredient.children[0].children[1].onclick = ()=>{this.removeIngredient(ingredient)};\n            ingredient.children[1].children[0].value = recipe.ingredients[i].quantity;\n            ingredient.children[1].children[1].value = recipe.ingredients[i].unit;\n\n            let select = ingredient.children[1].children[1];\n            if(recipe.ingredients[i].ingredient.convert.toMass > 0) select.children[0].style.display = \"block\";\n            if(recipe.ingredients[i].ingredient.convert.toVolume > 0) select.children[1].style.display = \"block\";\n            if(recipe.ingredients[i].ingredient.convert.toLength > 0) select.children[2].style.display = \"block\";\n            \n            used.appendChild(ingredient);\n        }\n\n        this.unused = [];\n        for(let i = 0; i < merchant.inventory.length; i++){\n            if(tempList.includes(merchant.inventory[i].ingredient.id)) continue;\n            this.unused.push(merchant.inventory[i].ingredient);\n        }\n\n        this.displayUnused(this.unused);\n    },\n\n    displayUnused: function(items){\n        let container = document.getElementById(\"editRecipeUnused\");\n        items.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\n        while(container.children.length > 0){\n            container.removeChild(container.firstChild);\n        }\n\n        for(let i = 0; i < items.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = items[i].name;\n            button.classList.add(\"choosable\");\n            button.classList.add(\"selection\");\n            button.ingredient = items[i];\n            button.onclick = ()=>{this.addIngredient(button)};\n            container.appendChild(button);\n        }\n    },\n\n    addIngredient: function(ingredient){\n        for(let i = 0; i < this.unused.length; i++){\n            if(this.unused[i] === ingredient.ingredient){\n                this.unused.splice(i, 1);\n                break;\n            }\n        }\n\n        let unused = document.getElementById(\"editRecipeUnused\");\n        unused.removeChild(ingredient);\n        let used = document.getElementById(\"editRecipeUsed\");\n        \n        let newItem = document.getElementById(\"editRecipeInputItem\").content.children[0].cloneNode(true);\n        newItem.ingredient = ingredient.ingredient;\n        newItem.children[0].children[0].innerText = ingredient.ingredient.name;\n        newItem.children[0].children[1].onclick = ()=>{this.removeIngredient(newItem)};\n\n        let select = newItem.children[1].children[1];\n        if(ingredient.ingredient.convert.toMass > 0) select.children[0].style.display = \"block\";\n        if(ingredient.ingredient.convert.toVolume > 0) select.children[1].style.display = \"block\";\n        if(ingredient.ingredient.convert.toLength > 0) select.children[2].style.display = \"block\";\n\n        select.value = ingredient.ingredient.unit;\n\n        used.appendChild(newItem);\n    },\n\n    removeIngredient: function(ingredient){\n        let used = document.getElementById(\"editRecipeUsed\");\n\n        this.unused.push(ingredient.ingredient);\n\n        used.removeChild(ingredient);\n        this.displayUnused(this.unused);\n    },\n\n    search: function(){\n        let text = document.getElementById(\"editRecipeSearch\").value;\n        let newList = [];\n\n        for(let i = 0; i < this.unused.length; i++){\n            let name = this.unused[i].name.toLowerCase();\n            if(name.includes(text) === true){\n                newList.push(this.unused[i]);\n            }\n        }\n\n        this.displayUnused(newList);\n    },\n\n    submit: function(id){\n        let data = {\n            id: id,\n            name: document.getElementById(\"editRecipeName\").children[0].value,\n            price: parseInt(document.getElementById(\"editRecipePrice\").children[0].value * 100),\n            category: document.getElementById(\"editRecipeCategory\").children[0].value,\n            ingredients: []\n        };\n\n        let divs = document.getElementById(\"editRecipeUsed\").children;\n        for(let i = 0; i < divs.length; i++){\n            data.ingredients.push({\n                ingredient: divs[i].ingredient.id,\n                quantity: controller.toBase(divs[i].children[1].children[0].value, divs[i].children[1].children[1].value),\n                unit: divs[i].children[1].children[1].value\n            });\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/recipe/update\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.updateRecipe(merchant.getRecipe(response._id), response);\n                    state.updateRecipes();\n                    controller.closeSidebar();\n                    controller.createBanner(\"RECIPE UPDATED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}", "let newTransaction = {\n    display: function(){\n        document.getElementById(\"sidebarDiv\").classList.add(\"sidebarWide\");\n        document.getElementById(\"newTransactionDate\").valueAsDate = new Date();\n\n        let recipeList = document.getElementById(\"newTransAvailable\");\n        recipeList.children[0].onkeyup = ()=>{this.searchRecipes()};\n        while(recipeList.children.length > 0){\n            recipeList.removeChild(recipeList.firstChild);\n        }\n\n        for(let i = 0; i < merchant.recipes.length; i++){\n            let button = document.createElement(\"button\");\n            button.classList.add(\"choosable\");\n            button.innerText = merchant.recipes[i].name;\n            button.onclick = ()=>{this.add(merchant.recipes[i], button)};\n            recipeList.appendChild(button);\n        }\n\n        document.getElementById(\"submitNewTransaction\").onclick = ()=>{this.submit()};\n    },\n\n    add: function(recipe, element){\n        element.style.display = \"none\";\n\n        let template = document.getElementById(\"createTransaction\").content.children[0].cloneNode(true);\n        template.children[0].children[0].innerText = recipe.name;\n        template.children[0].children[1].onclick = ()=>{\n            template.parentElement.removeChild(template);\n            element.style.display = \"flex\";\n        };\n        template.recipe = recipe;\n        document.getElementById(\"newTransactionRecipes\").appendChild(template);\n    },\n\n    searchRecipes: function(){\n        let items = document.getElementById(\"newTransAvailable\").children;\n        let searchString = items[0].value.toLowerCase();\n\n        if(searchString === \"\"){\n            for(let i = 1; i < items.length; i++){\n                items[i].style.display = \"flex\";\n            }\n        }else{\n            for(let i = 1; i < items.length; i++){\n                if(items[i].innerText.toLowerCase().includes(searchString)){\n                    items[i].style.display = \"flex\";\n                }else{\n                    items[i].style.display = \"none\";\n                }\n            }\n        }\n    },\n\n    submit: function(){\n        let recipeDivs = document.getElementById(\"newTransactionRecipes\");\n        let date = document.getElementById(\"newTransactionDate\").valueAsDate;\n\n        date.setHours(0, 0, 0, 0);\n        \n        let data = {\n            date: date,\n            recipes: [],\n            ingredientUpdates: {}\n        };\n\n        for(let i = 0; i < recipeDivs.children.length;  i++){\n            let quantity = recipeDivs.children[i].children[1].value;\n            const recipe = recipeDivs.children[i].recipe;\n            if(quantity !== \"\" && quantity > 0){\n                data.recipes.push({\n                    recipe: recipe.id,\n                    quantity: quantity\n                });\n\n                let keys = Object.keys(recipe.ingredientTotals);\n\n                for(let j = 0; j < keys.length; j++){\n                    if(data.ingredientUpdates[keys[j]] === undefined){\n                        data.ingredientUpdates[keys[j]] = recipe.ingredientTotals[keys[j]] * quantity;\n                    }else{\n                        data.ingredientUpdates[keys[j]] += recipe.ingredientTotals[keys[j]] * quantity\n                    }\n                }\n            }else if(quantity < 0){\n                controller.createBanner(\"CANNOT HAVE NEGATIVE VALUES\", \"error\");\n                return;\n            }\n        }\n\n        if(data.recipes.length > 0){\n            let loader = document.getElementById(\"loaderContainer\");\n            loader.style.display = \"flex\";\n\n            fetch(\"/transaction/create\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json;charset=utf-8\"\n                },\n                body: JSON.stringify(data)\n            })\n                .then(response => response.json())\n                .then((response)=>{\n                    if(typeof(response) === \"string\"){\n                        controller.createBanner(response, \"error\");\n                    }else{\n                        let thirtyAgo = new Date();\n                        thirtyAgo.setDate(thirtyAgo.getDate() - 30);\n                        thirtyAgo.setHours(0, 0, 0);\n\n                        if(\n                            merchant.transactions.length === 0 ||\n                            new Date(response.date) > thirtyAgo\n                        ){\n                            merchant.addTransactions([response], true);\n                            state.updateTransactions();\n                        }\n                        let from = new Date();\n                        from.setDate(from.getDate() - 7);\n                        from.setHours(0, 0, 0, 0);\n                        controller.openStrand(\"transactions\", merchant.getTransactions(from, new Date()));\n                        controller.createBanner(\"TRANSACTION CREATED\", \"success\");\n                    }\n                })\n                .catch((err)=>{\n                    controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n                })\n                .finally(()=>{\n                    loader.style.display = \"none\";\n                });\n        }\n    }\n}\n\nmodule.exports = newTransaction;", "let orderDetails = {\n    display: function(order){\n        document.getElementById(\"removeOrderBtn\").onclick = ()=>{controller.openModal(\"confirmDeleteOrder\", order)};\n\n        document.getElementById(\"orderDetailName\").innerText = order.name;\n        document.getElementById(\"orderDetailDate\").innerText = order.date.toLocaleDateString(\"en-US\");\n        document.getElementById(\"orderDetailTax\").innerText = `$${order.taxes.toFixed(2)}`;\n        document.getElementById(\"orderDetailFee\").innerText = `$${order.fees.toFixed(2)}`;\n\n        let ingredientList = document.getElementById(\"orderIngredients\");\n        while(ingredientList.children.length > 0){\n            ingredientList.removeChild(ingredientList.firstChild);\n        }\n\n        let template = document.getElementById(\"orderIngredient\").content.children[0];\n        for(let i = 0; i < order.ingredients.length; i++){\n            let ingredientDiv = template.cloneNode(true);\n            const ingredient = order.ingredients[i].ingredient;\n            \n            ingredientDiv.children[0].innerText = order.ingredients[i].ingredient.name;\n            ingredientDiv.children[2].innerText = `$${order.ingredients[i].cost().toFixed(2)}`;\n            ingredientDiv.onclick = ()=>{\n                controller.openStrand(\"ingredients\");\n                controller.openSidebar(\"ingredientDetails\", merchant.getIngredient(order.ingredients[i].ingredient.id));\n            }\n            \n            let ingredientDisplay = ingredientDiv.children[1];\n            ingredientDisplay.innerText = `${order.ingredients[i].quantity.toFixed(2)} ${ingredient.unit.toUpperCase()} X $${order.ingredients[i].pricePerUnit.toFixed(2)}`;\n\n            ingredientList.appendChild(ingredientDiv);\n        }\n\n        document.getElementById(\"orderDetailTotal\").innerText = `$${order.getIngredientCost().toFixed(2)}`;\n        document.querySelector(\"#orderTotalPrice p\").innerText = `$${order.getTotalCost().toFixed(2)}`;\n    },\n\n    remove: function(order){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/order/${order.id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            }\n        })\n            .then((response) => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    let from = new Date();\n                    from.setDate(from.getDate() - 30);\n                    if(order.date > from){\n                        merchant.removeOrder(order);\n                        state.updateOrders();\n                    }\n\n                    controller.openStrand(\"orders\", merchant.orders);\n                    controller.closeModal();\n                    controller.createBanner(\"ORDER REMOVED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = orderDetails;", "const Order = require(\"../classes/Order.js\");\n\nlet orderFilter = {\n    display: function(){\n        let now = new Date();\n        let past = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 30);\n        let ingredientList = document.getElementById(\"orderFilterIngredients\");\n\n        document.getElementById(\"orderFilterDateFrom\").valueAsDate = past;\n        document.getElementById(\"orderFilterDateTo\").valueAsDate = now;\n\n        while(ingredientList.children.length > 0){\n            ingredientList.removeChild(ingredientList.firstChild);\n        }\n\n        for(let i = 0; i < merchant.inventory.length; i++){\n            let element = document.createElement(\"div\");\n            element.classList.add(\"choosable\");\n            element.ingredient = merchant.inventory[i].ingredient.id;\n            element.onclick = ()=>{this.toggleActive(element)};\n            ingredientList.appendChild(element);\n\n            let text = document.createElement(\"p\");\n            text.innerText = merchant.inventory[i].ingredient.name;\n            element.appendChild(text);\n        }\n\n        document.getElementById(\"orderFilterSubmit\").onclick = ()=>{this.submit()};\n    },\n\n    toggleActive: function(element){\n        if(element.classList.contains(\"active\")){\n            element.classList.remove(\"active\");\n        }else{\n            element.classList.add(\"active\");\n        }\n    },\n\n    submit: function(){\n        let data = {\n            from: document.getElementById(\"orderFilterDateFrom\").valueAsDate,\n            to: document.getElementById(\"orderFilterDateTo\").valueAsDate,\n            ingredients: []\n        }\n\n        data.from.setHours(0, 0, 0, 0);\n        data.to.setHours(0, 0, 0, 0);\n\n        let ingredients = document.getElementById(\"orderFilterIngredients\").children;\n        for(let i = 0; i < ingredients.length; i++){\n            if(ingredients[i].classList.contains(\"active\")){\n                data.ingredients.push(ingredients[i].ingredient);\n            }\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/orders/get\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then((response)=>{\n            let orders = [];\n            if(typeof(response) === \"string\"){\n                controller.createBanner(response, \"error\");\n            }else if(response.length === 0){\n                controller.createBanner(\"NO ORDERS MATCH YOUR SEARCH\", \"alert\");\n            }else{\n                for(let i = 0; i < response.length; i++){\n                    orders.push(new Order(\n                        response[i]._id,\n                        response[i].name,\n                        response[i].date,\n                        response[i].taxes,\n                        response[i].fees,\n                        response[i].ingredients,\n                        merchant\n                    ));\n                }\n            }\n\n            state.updateOrders(orders);\n            controller.openStrand(\"orders\");\n        })\n        .catch((err)=>{\n            controller.createBanner(\"UNABLE TO DISPLAY THE ORDERS\", \"error\");\n        })\n        .finally(()=>{\n            loader.style.display = \"none\";\n        });\n    }\n}\n\nmodule.exports = orderFilter;", "let recipeDetails = {\n    display: function(recipe){\n        document.getElementById(\"editRecipeBtn\").onclick = ()=>{controller.openSidebar(\"editRecipe\", recipe)};\n\n        let showIcon = document.getElementById(\"showRecipeBtn\");\n        let hideIcon = document.getElementById(\"hideRecipeBtn\");\n        if(recipe.hidden === true){\n            showIcon.style.display = \"block\";\n            hideIcon.style.display = \"none\";\n            showIcon.onclick = ()=>{this.hide(recipe)};\n        }else{\n            showIcon.style.display = \"none\";\n            hideIcon.style.display = \"block\";\n            showIcon.onclick = ()=>{this.hide(recipe)};\n        }\n        document.getElementById(\"hideRecipeBtn\").onclick = ()=>{this.hide(recipe)};\n        document.getElementById(\"recipeName\").innerText = recipe.name;\n        document.getElementById(\"recipeCategory\").innerText = recipe.category;\n\n        let button = document.getElementById(\"removeRecipeBtn\");\n        switch(merchant.pos){\n            case \"square\":\n                button.style.display = \"none\";\n                break;\n            case \"none\":\n                button.style.display = \"block\";\n                button.onclick = ()=>{controller.openModal(\"confirmDeleteRecipe\", recipe)};\n                break;\n        }\n\n        //ingredient list\n        let ingredientsDiv = document.getElementById(\"recipeIngredientList\");\n\n        while(ingredientsDiv.children.length > 0){\n            ingredientsDiv.removeChild(ingredientsDiv.firstChild);\n        }\n\n        let template = document.getElementById(\"recipeIngredient\").content.children[0];\n        for(let i = 0; i < recipe.ingredients.length; i++){\n            let recipeDiv = template.cloneNode(true);\n            recipeDiv.children[0].innerText = recipe.ingredients[i].ingredient.name;\n            recipeDiv.children[1].innerText = `${recipe.ingredients[i].getQuantityDisplay()}`;\n            recipeDiv.onclick = ()=>{\n                controller.openStrand(\"ingredients\");\n                controller.openSidebar(\"ingredientDetails\", merchant.getIngredient(recipe.ingredients[i].ingredient.id));\n            }\n            ingredientsDiv.appendChild(recipeDiv);\n        }\n\n        document.getElementById(\"recipePrice\").children[1].innerText = `$${recipe.price.toFixed(2)}`;\n    },\n\n    hide: function(recipe){\n        recipe.hidden = (recipe.hidden === true) ? false : true;\n\n        state.updateRecipes();\n        controller.openStrand(\"recipeBook\");\n        controller.openSidebar(\"recipeDetails\", recipe);\n\n        fetch(`/recipes/hide/${recipe.id}`)\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    recipe.hidden = (recipe.hidden === true) ? false : true;\n                    controller.openStrand(\"recipes\");\n                    controller.createBanner(response, \"error\");\n                }\n            })\n            .catch((err)=>{});\n    },\n\n    remove: function(recipe){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/recipe/remove/${recipe.id}`, {\n            method: \"delete\"\n        })\n            .then((response) => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.removeRecipe(recipe);\n                    state.updateRecipes();\n\n                    controller.createBanner(\"RECIPE REMOVED\", \"success\");\n                    controller.closeModal();\n                    controller.openStrand(\"recipeBook\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = recipeDetails;", "let transactionDetails = {\n    transaction: {},\n\n    display: function(transaction){\n        this.transaction = transaction;\n\n        let recipeList = document.getElementById(\"transactionRecipes\");\n        let template = document.getElementById(\"transactionRecipe\").content.children[0];\n        let totalRecipes = 0;\n        let totalPrice = 0;\n\n        while(recipeList.children.length > 0){\n            recipeList.removeChild(recipeList.firstChild);\n        }\n\n        for(let i = 0; i < transaction.recipes.length; i++){\n            let recipe = template.cloneNode(true);\n            let price = transaction.recipes[i].quantity * transaction.recipes[i].recipe.price;\n\n            recipe.children[0].innerText = transaction.recipes[i].recipe.name;\n            recipe.children[1].innerText = `${transaction.recipes[i].quantity} x $${transaction.recipes[i].recipe.price.toFixed(2)}`;\n            recipe.children[2].innerText = `$${price.toFixed(2)}`;\n            recipe.onclick = ()=>{\n                controller.openStrand(\"recipeBook\");\n                controller.openSidebar(\"recipeDetails\", transaction.recipes[i].recipe);\n            }\n            recipeList.appendChild(recipe);\n\n            totalRecipes += transaction.recipes[i].quantity;\n            totalPrice += price;\n        }\n\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        let dateString = `${days[transaction.date.getDay()]}, ${months[transaction.date.getMonth()]} ${transaction.date.getDate()}, ${transaction.date.getFullYear()}`;\n\n        document.getElementById(\"transactionDate\").innerText = dateString;\n        document.getElementById(\"totalRecipes\").innerText = `${totalRecipes} recipes`;\n        document.getElementById(\"totalPrice\").innerText = `$${totalPrice.toFixed(2)}`;\n\n        let button = document.getElementById(\"removeTransBtn\");\n        switch(merchant.pos){\n            case \"square\":\n                button.style.display = \"none\";\n                break;\n            case \"none\":\n                button.style.display = \"block\";\n                button.onclick = ()=>{controller.openModal(\"confirmDeleteTransaction\", transaction)};\n        }\n    },\n\n    remove: function(){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/transaction/${this.transaction.id}`, {\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n        })\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    merchant.removeTransaction(this.transaction);\n                    state.updateTransactions();\n\n                    let from = new Date();\n                    from.setDate(from.getDate() - 7);\n                    from.setHours(0, 0, 0, 0);\n\n                    controller.openStrand(\"transactions\", merchant.getTransactions(from, new Date()));\n                    controller.closeModal();\n                    controller.createBanner(\"TRANSACTION REMOVED\", \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n}\n\nmodule.exports = transactionDetails;", "const Transaction = require(\"../classes/Transaction.js\");\n\nlet transactionFilter = {\n    display: function(){\n        //Set default dates\n        let today = new Date();\n        let monthAgo = new Date(today);\n        monthAgo.setMonth(today.getMonth() - 1);\n\n        document.getElementById(\"transFilterDateStart\").valueAsDate = monthAgo;\n        document.getElementById(\"transFilterDateEnd\").valueAsDate = today;\n\n        //populate recipes\n        let recipeList = document.getElementById(\"transFilterRecipeList\");\n\n        while(recipeList.children.length > 0){\n            recipeList.removeChild(recipeList.firstChild);\n        }\n\n        for(let i = 0; i < merchant.recipes.length; i++){\n            let recipe = document.createElement(\"div\");\n            recipe.innerText = merchant.recipes[i].name;\n            recipe.recipe = merchant.recipes[i];\n            recipe.classList.add(\"choosable\");\n            recipe.onclick = ()=>{this.toggleActive(recipe)};\n            recipeList.appendChild(recipe);\n        }\n\n        //Submit button\n        document.getElementById(\"transFilterSubmit\").onclick = ()=>{this.submit()};\n    },\n\n    toggleActive: function(element){\n        if(element.classList.contains(\"active\")){\n            element.classList.remove(\"active\");\n        }else{\n            element.classList.add(\"active\");\n        }\n    },\n\n    submit: function(){\n        let data = {\n            from: document.getElementById(\"transFilterDateStart\").valueAsDate,\n            to: document.getElementById(\"transFilterDateEnd\").valueAsDate,\n            recipes: []\n        }\n\n        data.from.setHours(0, 0, 0, 0);\n        data.to.setHours(0, 0, 0, 0);\n\n        if(data.startDate >= data.endDate){\n            controller.createBanner(\"START DATE CANNOT BE AFTER END DATE\", \"error\");\n            return;\n        }\n\n        let recipes = document.getElementById(\"transFilterRecipeList\").children;\n        for(let i = 0; i < recipes.length; i++){\n            if(recipes[i].classList.contains(\"active\")){\n                data.recipes.push(recipes[i].recipe.id);\n            }\n        }\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/transaction\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                let transactions = [];\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else if(response.length === 0){\n                    controller.createBanner(\"NO TRANSACTIONS MATCH YOUR SEARCH\", \"error\");\n                }else{\n                    for(let i = 0; i < response.length; i++){\n                        transactions.push(new Transaction(\n                            response[i]._id,\n                            response[i].date,\n                            response[i].recipes,\n                            merchant\n                        ));\n                    }\n                }\n\n                controller.openStrand(\"transactions\", transactions);\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    }\n}\n\nmodule.exports = transactionFilter;", "const Merchant = require(\"./classes/Merchant.js\");\n\nlet modal = {\n    feedback: function(){\n        let form = document.getElementById(\"modalFeedback\");\n        form.style.display = \"flex\";\n        form.onsubmit = ()=>{this.submitFeedback()};\n    },\n\n    submitFeedback: function(){\n        event.preventDefault();\n\n        let data = {\n            title: document.getElementById(\"feedbackTitle\").value,\n            content: document.getElementById(\"feedbackContent\").value,\n            date: new Date()\n        };\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/feedback\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    controller.createBanner(\"THANK YOU FOR YOUR INPUT\", \"success\");\n                    controller.closeModal();\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    newMerchant: function(){\n        let form = document.getElementById(\"modalNewMerchant\");\n        form.style.display = \"flex\";\n        form.onsubmit = ()=>{this.submitNewMerchantNone()};\n    },\n\n    submitNewMerchantNone(){\n        event.preventDefault();\n\n        let data = {\n            name: document.getElementById(\"addMerchantName\").value,\n        };\n\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(\"/merchant/add/none\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    let newMerchant = new Merchant(\n                        response[1].name,\n                        response[1].pos,\n                        response[1].inventory,\n                        response[1].recipes,\n                        [],\n                        (response[1].address === undefined) ? \"\" : response[1].address.full,\n                        response[0]\n                    );\n\n                    window.merchant = newMerchant;\n\n                    state.updateMerchant();\n                    controller.openStrand(\"home\");\n                    controller.closeModal();\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    squareLocations: function(locations){\n        document.getElementById(\"modalSquareLocations\").style.display = \"flex\";\n        document.getElementById(\"squareLocationsCancel\").onclick = ()=>{controller.closeModal()};\n        if(locations.length === 0){\n            document.getElementById(\"squareLocationsTitle\").innerText = \"ALL OF YOUR LOCATIONS HAVE ALREADY BEEN ADDED TO THE SUBLINE\";\n            return;\n        }\n\n        let container = document.getElementById(\"squareLocationsButtons\");\n\n        while(container.children.length > 0){\n            container.removeChild(container.firstChild);\n        }\n        \n        for(let i = 0; i < locations.length; i++){\n            let button = document.createElement(\"button\");\n            button.innerText = locations[i].name;\n            button.classList.add(\"button\");\n            button.onclick = ()=>{this.addSquareMerchant(locations[i].id)};\n            container.appendChild(button);\n        }\n    },\n\n    addSquareMerchant: function(id){\n        let loader = document.getElementById(\"loaderContainer\");\n        loader.style.display = \"flex\";\n\n        fetch(`/square/add/${id}`)\n            .then(response => response.json())\n            .then((response)=>{\n                if(typeof(response) === \"string\"){\n                    controller.createBanner(response, \"error\");\n                }else{\n                    window.merchant = new Merchant(\n                        response[1].name,\n                        response[1].pos,\n                        response[1].inventory,\n                        response[1].recipes,\n                        [],\n                        (response[1].address === undefined) ? \"\" : response[1].address.full,\n                        response[0]\n                    );\n\n                    state.updateMerchant();\n                    controller.closeModal();\n                    controller.openStrand(\"home\");\n                    controller.createBanner(`NEW MERCHANT, \"${response[1].name}\", CREATED`, \"success\");\n                }\n            })\n            .catch((err)=>{\n                controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n            })\n            .finally(()=>{\n                loader.style.display = \"none\";\n            });\n    },\n\n    editSubIngredients: function(ingredient){\n        document.getElementById(\"modalEditSubIngredients\").style.display = \"flex\";\n\n        document.getElementById(\"cancelEditSubIngredients\").onclick = ()=>{controller.closeModal()};\n\n        let left = document.getElementById(\"editSubAllIng\");\n        let right = document.getElementById(\"editSubCurrentIng\");\n        let template = document.getElementById(\"selectedSubIngredient\").content.children[0];\n\n        while(left.children.length > 0){\n            left.removeChild(left.firstChild);\n        }\n\n        while(right.children.length > 0){\n            right.removeChild(right.firstChild);\n        }\n        \n        let createOptGroup = (container, group, options)=>{\n            let optGroup = document.createElement(\"optgroup\")\n            optGroup.label = group;\n            container.appendChild(optGroup);\n\n            for(let i = 0; i < options.length; i++){\n                let option = document.createElement(\"option\");\n                option.innerText = options[i].toUpperCase();\n                option.value = options[i];\n                optGroup.appendChild(option);\n            }\n        }\n\n        let addIngredient = (newIngredient, leftVal = 1, rightVal = 1)=>{\n            let div = template.cloneNode(true);\n            div.children[0].children[0].innerText = newIngredient.name;\n            div.children[0].children[1].onclick = ()=>{removeIngredient(div, newIngredient)};\n            div.children[1].children[0].children[0].value = leftVal;\n            div.children[1].children[2].children[0].value = rightVal;\n            div.ingredient = newIngredient;\n            right.appendChild(div);\n\n            if(newIngredient.convert.toMass > 0){\n                createOptGroup(div.children[1].children[0].children[1], \"MASS\", [\"g\", \"kg\", \"oz\", \"lb\"])\n            }\n            if(newIngredient.convert.toVolume > 0){\n                createOptGroup(div.children[1].children[0].children[1], \"VOLUME\", [\"ml\", \"l\", \"tsp\", \"tbsp\", \"ozfl\", \"cup\", \"pt\", \"qt\", \"gal\"]);\n            }\n            if(newIngredient.convert.toLength > 0){\n                createOptGroup(div.children[1].children[0].children[1], \"LENGTH\", [\"mm\", \"cm\", \"m\", \"in\", \"ft\"]);\n            }\n            if(newIngredient.unit === \"each\"){\n                createOptGroup(div.children[1].children[0].children[1], \"OTHER\", [\"each\"]);\n            }\n            div.children[1].children[0].children[1].value = newIngredient.unit;\n\n            createOptGroup(\n                div.children[1].children[2].children[1],\n                controller.getUnitType(ingredient.unit),\n                ingredient.getPotentialUnits()\n            );\n\n            div.children[1].children[0].children[1].value = (newIngredient.unit === \"bottle\") ? newIngredient.altUnit : newIngredient.unit;\n            div.children[1].children[2].children[1].value = (ingredient.unit === \"bottle\") ? ingredient.altUnit : ingredient.unit;\n        }\n\n        let removeIngredient = (div, newIngredient)=>{\n            div.parentElement.removeChild(div);\n\n            let button = document.createElement(\"button\");\n            button.innerText = newIngredient.name;\n            button.classList.add(\"choosable\");\n            button.onclick = ()=>{addIngredient(newIngredient)};\n            left.appendChild(button);\n        }\n\n        for(let i = 0; i < merchant.inventory.length; i++){\n            let baseIngredient = merchant.inventory[i].ingredient;\n            if(baseIngredient === ingredient) continue;\n            let subIngredient = ingredient.subIngredients.find(j => j.ingredient.id === baseIngredient.id);\n            if(subIngredient === undefined){\n                let button = document.createElement(\"button\");\n                button.innerText = baseIngredient.name;\n                button.classList.add(\"choosable\");\n                button.onclick = ()=>{\n                    button.parentElement.removeChild(button);\n                    addIngredient(baseIngredient)};\n                left.appendChild(button);\n            }else{\n                addIngredient(\n                    baseIngredient,\n                    parseFloat((subIngredient.quantity).toFixed(2)),\n                    controller.unitMultiplier(controller.getBaseUnit(ingredient.unit), ingredient.unit)\n                );\n            }\n        }\n\n        //SUBMIT SUB INGREDIENTS\n        document.getElementById(\"submitEditSubIngredients\").onclick = ()=>{\n            let data = {\n                id: ingredient.id,\n                ingredients: []\n            };\n\n            for(let i = 0; i < right.children.length; i++){\n                let leftQuantity = parseFloat(right.children[i].children[1].children[0].children[0].value);\n                let leftUnit = right.children[i].children[1].children[0].children[1].value;\n                let rightQuantity = parseFloat(right.children[i].children[1].children[2].children[0].value);\n                let rightUnit = right.children[i].children[1].children[2].children[1].value;\n\n                leftQuantity *= controller.unitMultiplier(leftUnit, controller.getBaseUnit(leftUnit));\n                rightQuantity *= controller.unitMultiplier(rightUnit, controller.getBaseUnit(rightUnit));\n\n                data.ingredients.push({\n                    ingredient: right.children[i].ingredient.id,\n                    quantity: leftQuantity / rightQuantity,\n                    unit: leftUnit\n                });\n            }\n\n            let loader = document.getElementById(\"loaderContainer\");\n            loader.style.display = \"flex\";\n\n            fetch(\"/ingredients/subingredients\", {\n                method: \"put\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            })\n                .then(response => response.json())\n                .then((response)=>{\n                    if(typeof(response) === \"string\"){\n                        if(response.includes(\"$\") === true) {\n                            controller.createBanner(response.split(\"$\")[0], \"error\");\n                            controller.closeModal();\n                            controller.openModal(\"circularReference\", response);\n                        }else{\n                            controller.createBanner(response, \"error\");\n                        }\n                    }else{\n                        ingredient.replaceIngredients(response.ingredients);\n                        state.updateIngredients();\n\n                        controller.createBanner(`SUB-INGREDIENTS UPDATED FOR ${ingredient.name}`, \"success\");\n                        controller.closeModal();\n                    }\n                })\n                .catch((err)=>{\n                    controller.createBanner(\"SOMETHING WENT WRONG. PLEASE REFRESH THE PAGE\", \"error\");\n                })\n                .finally(()=>{\n                    loader.style.display = \"none\";\n                });\n        }\n    },\n\n    circularReference: function(response){\n        let array = response.split(\"$\");\n\n        let modal = document.getElementById(\"modalCircularReference\");\n        modal.style.display = \"flex\";\n\n        modal.children[0].innerText = array[0];\n\n        while(modal.children[1].children.length > 0){\n            modal.children[1].removeChild(modal.children[1].firstChild);\n        }\n\n        for(let i = 1; i < array.length; i++){\n            let text = document.createElement(\"p\");\n            text.innerText = array[i];\n            modal.children[1].appendChild(text);\n        }\n\n        document.getElementById(\"circularReferenceButton\").onclick = ()=>{controller.closeModal()};\n    }\n};\n\nmodule.exports = modal;", "const home = require(\"./strands/home.js\");\nconst ingredients = require(\"./strands/ingredients.js\");\nconst recipeBook = require(\"./strands/recipeBook.js\");\nconst analytics = require(\"./strands/analytics.js\");\nconst orders = require(\"./strands/orders.js\");\nconst transactions = require(\"./strands/transactions.js\");\nconst account = require(\"./strands/account.js\");\n\nconst ingredientDetails = require(\"./sidebars/ingredientDetails.js\");\nconst newIngredient = require(\"./sidebars/newIngredient.js\");\nconst editIngredient = require(\"./sidebars/editIngredient.js\");\nconst newOrder = require(\"./sidebars/newOrder.js\");\nconst newRecipe = require(\"./sidebars/newRecipe.js\");\nconst editRecipe = require(\"./sidebars/editRecipe.js\");\nconst newTransaction = require(\"./sidebars/newTransaction.js\");\nconst orderDetails = require(\"./sidebars/orderDetails.js\");\nconst orderFilter = require(\"./sidebars/orderFilter.js\");\nconst recipeDetails = require(\"./sidebars/recipeDetails.js\");\nconst transactionDetails = require(\"./sidebars/transactionDetails.js\");\nconst transactionFilter = require(\"./sidebars/transactionFilter.js\");\n\nconst modalScript = require(\"./modal.js\");\n\nconst Merchant = require(\"./classes/Merchant.js\");\nwindow.merchant = new Merchant(\n    data.merchant.name,\n    data.merchant.pos,\n    data.merchant.inventory,\n    data.merchant.recipes,\n    data.transactions,\n    (data.merchant.address === undefined) ? \"\" : data.merchant.address.full,\n    data.owner,\n    data.merchant._id\n);\n\ncontroller = {\n    openStrand: function(strand, data){\n        this.closeSidebar();\n\n        let strands = document.querySelectorAll(\".strand\");\n        for(let i = 0; i < strands.length; i++){\n            strands[i].style.display = \"none\";\n        }\n\n        let buttons = document.querySelectorAll(\".menuButton\");\n        for(let i = 0; i < buttons.length - 1; i++){\n            buttons[i].classList = \"menuButton\";\n            buttons[i].disabled = false;\n        }\n\n        let activeButton = {};\n        switch(strand){\n            case \"home\": \n                activeButton = document.getElementById(\"homeBtn\");\n                document.getElementById(\"homeStrand\").style.display = \"flex\";\n                home.display();\n                break;\n            case \"ingredients\": \n                activeButton = document.getElementById(\"ingredientsBtn\");\n                document.getElementById(\"ingredientsStrand\").style.display = \"flex\";\n                ingredients.display();\n                break;\n            case \"recipeBook\":\n                activeButton = document.getElementById(\"recipeBookBtn\");\n                document.getElementById(\"recipeBookStrand\").style.display = \"flex\";\n                recipeBook.display();\n                break;\n            case \"analytics\":\n                activeButton = document.getElementById(\"analyticsBtn\");\n                document.getElementById(\"analyticsStrand\").style.display = \"flex\";\n                analytics.display();\n                break;\n            case \"orders\":\n                activeButton = document.getElementById(\"ordersBtn\");\n                document.getElementById(\"ordersStrand\").style.display = \"flex\";\n                orders.display();\n                break;\n            case \"transactions\":\n                activeButton = document.getElementById(\"transactionsBtn\");\n                document.getElementById(\"transactionsStrand\").style.display = \"flex\";\n                if(data !== undefined) transactions.transactions = data;\n                transactions.display();\n                break;\n            case \"account\":\n                activeButton = document.getElementById(\"accountBtn\");\n                document.getElementById(\"accountStrand\").style.display = \"flex\";\n                account.display();\n                break;\n        }\n\n        activeButton.classList = \"menuButton active\";\n        activeButton.disabled = true;\n\n        if(screen.height > screen.width || screen.width < 1200){\n            this.closeMenu();\n        }\n    },\n\n    /*\n    Open a specific sidebar\n    Input:\n    sidebar: the outermost element of the sidebar (must contain class sidebar)\n    */\n    openSidebar: function(sidebar, data = {}){\n        this.closeSidebar();\n\n        document.getElementById(\"sidebarDiv\").classList = \"sidebar\";\n        document.getElementById(sidebar).style.display = \"flex\";\n\n        switch(sidebar){\n            case \"ingredientDetails\":\n                ingredientDetails.display(data);\n                break;\n            case \"newIngredient\":\n                newIngredient.display();\n                break;\n            case \"editIngredient\":\n                editIngredient.display(data);\n                break;\n            case \"recipeDetails\":\n                recipeDetails.display(data);\n                break;\n            case \"editRecipe\":\n                editRecipe.display(data);\n                break;\n            case \"addRecipe\":\n                newRecipe.display();\n                break;\n            case \"orderDetails\":\n                orderDetails.display(data);\n                break;\n            case \"orderFilter\":\n                orderFilter.display();\n                break;\n            case \"newOrder\":\n                newOrder.display();\n                break;\n            case \"transactionDetails\":\n                transactionDetails.display(data);\n                break;\n            case \"transactionFilter\":\n                transactionFilter.display();\n                break;\n            case \"newTransaction\":\n                newTransaction.display();\n                break;\n        }\n\n        if(screen.height > screen.width || screen.width < 1200){\n            document.querySelector(\".contentBlock\").style.display = \"none\";\n            document.getElementById(\"mobileMenuSelector\").style.display = \"none\";\n            document.getElementById(\"sidebarCloser\").style.display = \"block\";\n        }\n    },\n\n    closeSidebar: function(){\n        let sidebar = document.getElementById(\"sidebarDiv\");\n        for(let i = 0; i < sidebar.children.length; i++){\n            if(sidebar.children[i].style.display !== \"none\"){\n                sidebar.children[i].style.display = \"none\";\n                let choosables = [];\n\n                switch(sidebar.children[i].id){\n                    case \"ingredientDetails\": \n                        choosables = document.querySelectorAll(\".ingredient\");\n                        break;\n                    case \"transactionDetails\":\n                        choosables = document.getElementById(\"transactionsList\").children;\n                        break;\n                    case \"recipeDetails\":\n                        choosables = document.getElementById(\"recipeList\").children;\n                        break;\n                    case \"orderDetails\":\n                        choosables = document.getElementById(\"orderList\").children;\n                        break;\n                }\n\n                for(let i = 0; i < choosables.length; i++){\n                    choosables[i].classList.remove(\"active\");\n                }\n            }\n        }\n        sidebar.classList = \"sidebarHide\";\n\n        if(screen.height > screen.width || screen.width < 1200){\n            document.querySelector(\".contentBlock\").style.display = \"flex\";\n            document.getElementById(\"mobileMenuSelector\").style.display = \"block\";\n            document.getElementById(\"sidebarCloser\").style.display = \"none\";\n        }\n    },\n\n    openModal: function(str, data){\n        let modal = document.getElementById(\"modal\");\n        modal.style.display = \"flex\";\n        modal.onclick = ()=>{this.closeModal()};\n        document.querySelector(\".modalBox\").onclick = ()=>{event.stopPropagation()};\n        document.getElementById(\"modalClose\").addEventListener(\"click\", this.closeModal);\n        let content = {};\n\n        switch(str){\n            case \"feedback\":\n                modalScript.feedback();\n                break;\n            case \"newMerchant\":\n                modalScript.newMerchant();\n                break;\n            case \"confirmDeleteMerchant\":\n                content = document.getElementById(\"modalConfirm\");\n                content.style.display = \"flex\";\n                content.children[1].innerText = \"Are you sure you want to delete this merchant?\";\n                content.children[2].children[0].onclick = ()=>{controller.closeModal()};\n                content.children[2].children[1].onclick = ()=>{account.deleteMerchant()};\n                break;\n            case \"confirmDeleteIngredient\":\n                content = document.getElementById(\"modalConfirm\");\n                content.style.display = \"flex\";\n                content.children[1].innerText = `Are you sure you want to delete ingredient: ${data.ingredient.name}?`;\n                content.children[2].children[0].onclick = ()=>{controller.closeModal()};\n                content.children[2].children[1].onclick = ()=>{ingredientDetails.remove(data)};\n                break;\n            case \"confirmDeleteRecipe\":\n                content = document.getElementById(\"modalConfirm\");\n                content.style.display = \"flex\";\n                content.children[1].innerText = `Are you sure you want to delete recipe: ${data.name}?`;\n                content.children[2].children[0].onclick = ()=>{controller.closeModal()};\n                content.children[2].children[1].onclick = ()=>{recipeDetails.remove(data)};\n                break;\n            case \"confirmDeleteOrder\":\n                content = document.getElementById(\"modalConfirm\");\n                content.style.display = \"flex\";\n                content.children[1].innerText = `Are you sure you want to delete order: ${data.name}`;\n                content.children[2].children[0].onclick = ()=>{controller.closeModal()};\n                content.children[2].children[1].onclick = ()=>{orderDetails.remove(data)};\n                break;\n            case \"confirmDeleteTransaction\":\n                content = document.getElementById(\"modalConfirm\");\n                content.style.display = \"flex\";\n                content.children[1].innerText = `Are you sure you want to delete this transaction?`;\n                content.children[2].children[0].onclick = ()=>{controller.closeModal()};\n                content.children[2].children[1].onclick = ()=>{transactionDetails.remove(data)};\n                break;\n            case \"squareLocations\":\n                modalScript.squareLocations(data);\n                break;\n            case \"editSubIngredients\":\n                modalScript.editSubIngredients(data);\n                break;\n            case \"circularReference\":\n                modalScript.circularReference(data);\n                break;\n        }\n    },\n\n    closeModal: function(){\n        let modal = document.getElementById(\"modal\");\n        let modalContent = document.getElementById(\"modalContent\");\n\n        for(let i = 0; i < modalContent.children.length; i++){\n            modalContent.children[i].style.display = \"none\";\n        }\n\n        modal.style.display = \"none\";\n    },\n\n    createBanner: function(text, status){\n        let container = document.getElementById(\"bannerContainer\");\n        let template = document.getElementById(\"banner\").content.children[0];\n        let banner = template.cloneNode(true);\n\n        switch(status){\n            case \"error\":\n                banner.children[0].style.backgroundColor = \"rgb(200, 0, 0)\";\n                banner.children[0].children[0].style.display = \"block\";\n                break;\n            case \"alert\":\n                banner.children[0].style.backgroundColor = \"rgb(230, 210, 0)\";\n                banner.children[0].children[1].style.display = \"block\";\n                break;\n            case \"success\":\n                banner.children[0].style.backgroundColor = \"rgb(0, 145, 55)\";\n                banner.children[0].children[2].style.display = \"block\";\n                break;\n        }\n\n        banner.children[1].innerText = text;\n        container.appendChild(banner);\n\n        let timer = setTimeout(()=>{\n            container.removeChild(banner);\n        }, 10000);\n\n        banner.children[2].addEventListener(\"click\", ()=>{\n            container.removeChild(banner);\n            clearTimeout(timer);\n        });\n    },\n\n    changeMenu: function(){\n        let menu = document.querySelector(\".menu\");\n        let buttons = document.querySelectorAll(\".menuButton\");\n        let links = document.getElementById(\"menuLinks\");\n        let merchantName = document.getElementById(\"menuLocationName\");\n\n        if(!menu.classList.contains(\"menuMinimized\")){\n            merchantName.style.display = \"none\";\n            menu.classList = \"menu menuMinimized\";\n\n            for(let i = 0; i < buttons.length; i++){\n                buttons[i].children[1].style.display = \"none\";\n            }\n\n            document.getElementById(\"max\").style.display = \"none\";\n            document.getElementById(\"min\").style.display = \"flex\";\n            \n            links.children[0].style.fontSize = \"12px\";\n            links.children[1].style.display = \"none\";\n            \n        }else if(menu.classList.contains(\"menuMinimized\")){\n            merchantName.style.display = \"block\";\n            menu.classList = \"menu\";\n\n            for(let i = 0; i < buttons.length; i++){\n                buttons[i].children[1].style.display = \"block\";\n            }\n\n            document.getElementById(\"max\").style.display = \"flex\";\n            document.getElementById(\"min\").style.display = \"none\";\n\n            links.children[0].style.fontSize = \"16px\";\n            links.children[1].style.display = \"block\";\n\n            setTimeout(()=>{\n                document.getElementById(\"max\").style.display = \"flex\";\n                document.getElementById(\"min\").style.display = \"none\";\n            }, 150);\n        }\n    },\n\n    openMenu: function(){\n        document.getElementById(\"menu\").style.display = \"flex\";\n        document.querySelector(\".contentBlock\").style.display = \"none\";\n        document.getElementById(\"mobileMenuSelector\").onclick = ()=>{this.closeMenu()};\n    },\n\n    closeMenu: function(){\n        document.getElementById(\"menu\").style.display = \"none\";\n        document.querySelector(\".contentBlock\").style.display = \"flex\";\n        document.getElementById(\"mobileMenuSelector\").onclick = ()=>{this.openMenu()};\n    },\n\n    getUnitType(unit){\n        switch(unit){\n            case \"g\": return \"mass\";\n            case \"kg\": return \"mass\";\n            case \"oz\": return \"mass\";\n            case \"lb\": return \"mass\";\n            case \"l\": return \"volume\";\n            case \"ml\": return \"volume\";\n            case \"tsp\": return \"volume\";\n            case \"tbsp\": return \"volume\";\n            case \"ozfl\": return \"volume\";\n            case \"cup\": return \"volume\";\n            case \"pt\": return \"volume\";\n            case \"qt\": return \"volume\";\n            case \"gal\": return \"volume\";\n            case \"mm\": return \"length\";\n            case \"cm\": return \"length\";\n            case \"m\": return \"length\";\n            case \"in\": return \"length\";\n            case \"ft\": return \"length\";\n            case \"bottle\": return \"bottle\";\n            case \"each\": return \"each\";\n        }\n    },\n\n    getBaseUnit(unit){\n        switch(unit){\n            case \"g\": return \"g\";\n            case \"kg\": return \"g\";\n            case \"oz\": return \"g\";\n            case \"lb\": return \"g\";\n            case \"l\": return \"l\";\n            case \"ml\": return \"l\";\n            case \"tsp\": return \"l\";\n            case \"tbsp\": return \"l\";\n            case \"ozfl\": return \"l\";\n            case \"cup\": return \"l\";\n            case \"pt\": return \"l\";\n            case \"qt\": return \"l\";\n            case \"gal\": return \"l\";\n            case \"mm\": return \"m\";\n            case \"cm\": return \"m\";\n            case \"m\": return \"m\";\n            case \"in\": return \"m\";\n            case \"ft\": return \"m\";\n            case \"bottle\": return \"l\";\n        }\n    },\n\n    unitMultiplier(from, to){\n        let multiplier = 1;\n        \n        switch(from){\n            case \"kg\": multiplier = 1000; break;\n            case \"oz\": multiplier = 28.3495; break;\n            case \"lb\": multiplier = 453.5924; break;\n            case \"ml\": multiplier = .001; break;\n            case \"tsp\": multiplier = .00492892004404; break;\n            case \"tbsp\": multiplier = 0.0147868184386; break;\n            case \"ozfl\": multiplier = 0.0295734619582; break;\n            case \"cup\": multiplier = 0.239998080015; break;\n            case \"pt\": multiplier = 0.473171193338; break;\n            case \"qt\": multiplier = 0.946342386675; break;\n            case \"gal\": multiplier = 3.7854; break;\n            case \"mm\": multiplier = 0.001; break;\n            case \"cm\": multiplier = 0.01; break;\n            case \"in\": multiplier = 0.025399986284; break;\n            case \"ft\": multiplier = 0.304803706413; break;\n        }\n\n        switch(to){\n            case \"g\": return multiplier;\n            case \"kg\": return multiplier / 1000;\n            case \"oz\": return multiplier / 28.3495;\n            case \"lb\": return multiplier / 453.5924;\n            case \"ml\": return multiplier * 1000;\n            case \"l\": return multiplier;\n            case \"tsp\": return multiplier * 202.8842;\n            case \"tbsp\": return multiplier * 67.6278;\n            case \"ozfl\": return multiplier * 33.8141;\n            case \"cup\": return multiplier * 4.1667;\n            case \"pt\": return multiplier * 2.1134;\n            case \"qt\": return multiplier * 1.0567\n            case \"gal\": return multiplier / 3.7854;\n            case \"mm\": return multiplier * 1000;\n            case \"cm\": return multiplier * 100;\n            case \"m\": return multiplier;\n            case \"in\": return multiplier * 39.3701;\n            case \"ft\": return multiplier * 3.2808;\n        }\n\n        return multiplier;\n    },\n\n    /*\n    Applies unitMultiplier to a specific quantity and unit\n    quantity = quantity of ingredient\n    unit = unit of ingredient\n    */\n    toBase: function(quantity, unit){\n        return quantity * this.unitMultiplier(unit, this.getBaseUnit(unit));\n    }\n}\n\nwindow.state = {\n    updateIngredients: function(){\n        ingredients.populateByProperty();\n        analytics.isPopulated = false;\n        home.drawInventoryCheckCard();\n        home.mostUsedIngredients();\n        home.mostUsedRecipes();\n    },\n\n    updateRecipes: function(){\n        recipeBook.populateRecipes();\n        analytics.isPopulated = false;\n        home.mostUsedIngredients();\n        home.mostUsedRecipes();\n    },\n\n    updateTransactions: function(transaction){\n        home.isPopulated = false;\n        ingredients.populateByProperty();\n        analytics.isPopulated = false;\n        transactions.display();\n        home.mostUsedRecipes();\n        home.mostUsedIngredients();\n    },\n\n    updateOrders: function(newOrders){\n        ingredients.isPopulated = false;\n        orders.isPopulated = false;\n        home.mostUsedIngredients();\n        if(newOrders !== undefined) orders.orders = newOrders;\n    },\n\n    updateMerchant(){\n        this.updateIngredients();\n        this.updateRecipes();\n        this.updateTransactions();\n        this.updateOrders();\n        document.getElementById(\"menuLocationName\").innerText = merchant.name;\n        recipeBook.isPopulated = false;\n    }\n}\n\nlet from = new Date();\nfrom.setDate(from.getDate() - 7);\nfrom.setHours(0, 0, 0, 0);\n\n//Add click listeners for menu buttons\ndocument.getElementById(\"menuShifter\").onclick = ()=>{controller.changeMenu()}\ndocument.getElementById(\"menuShifter2\").onclick = ()=>{controller.changeMenu()}\ndocument.getElementById(\"homeBtn\").onclick = ()=>{controller.openStrand(\"home\")};\ndocument.getElementById(\"ingredientsBtn\").onclick = ()=>{controller.openStrand(\"ingredients\")};\ndocument.getElementById(\"recipeBookBtn\").onclick = ()=>{controller.openStrand(\"recipeBook\")};\ndocument.getElementById(\"analyticsBtn\").onclick = ()=>{controller.openStrand(\"analytics\")};\ndocument.getElementById(\"ordersBtn\").onclick = ()=>{controller.openStrand(\"orders\")};\ndocument.getElementById(\"transactionsBtn\").onclick = ()=>{controller.openStrand(\"transactions\")};\ndocument.getElementById(\"accountBtn\").onclick = ()=>{controller.openStrand(\"account\")};\ndocument.getElementById(\"feedbackButton\").onclick = ()=>{controller.openModal(\"feedback\")};\n\ndocument.getElementById(\"menuLocationName\").innerText = merchant.name;\n\ncontroller.openStrand(\"home\");\n\nfor(let i = 0; i < merchant.recipes.length; i++){\n    merchant.recipes[i].calculateIngredientTotals();\n}"],
  "mappings": "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",
  "names": []
}
